{"version":3,"sources":["logo.svg","components/Navbar/index.js","actionTypes/index.js","actions/index.js","components/Manager/Sidebar/index.js","components/Manager/addStock.js","components/Manager/viewStock.js","components/Manager/addEmployee.js","components/Manager/viewEmployes.js","components/Manager/viewOrders.js","components/Manager/createOrder.js","components/Manager/index.js","components/SalesExecutive/viewOrders.js","components/SalesExecutive/index.js","components/Login/index.js","components/Landing/index.js","components/Home/index.js","App.js","reportWebVitals.js","reducer/index.js","store/index.js","index.js"],"names":["Navbar","className","src","alt","ADMIN_LOGIN","ADMIN_LOGOUT","SALESEXECUTIVE_LOGIN","SALESEXECUTIVE_LOGOUT","ADD_MEDICINE","ADD_SALES_EXECUTIVE","CREATE_ORDER","ADD_TO_CART","EMPTY_CART","UPDATE_INVENTORY_LIST","UPDATE_EMPLOYEE_LIST","UPDATE_ALL_ORDERS","UPDATE_EXECUTIVE_DETAILS","UPDATE_INVENTORY_DETAILS","USER_ID_FOR_UPDATE","MEDICINE_ID_FOR_UPDATE","updateExecutiveDetails","payload","type","updateInventoryDetails","createOrder","useStyles","makeStyles","theme","root","width","height","maxWidth","margin","padding","position","backgroundColor","palette","background","paper","nested","paddingLeft","spacing","links","textDecoration","connect","state","loginStatus","dispatch","logOutAdmin","classes","React","useState","stock","setStock","emp","setEmp","ord","setOrd","history","useHistory","List","component","ListItem","button","onClick","e","ListItemIcon","ListItemText","primary","Collapse","in","timeout","unmountOnExit","disablePadding","to","localStorage","setItem","push","add_medicine_to_inventory","addMedicine","medicineName","setMedicineName","manufacturerName","setManufacturerName","price","setPrice","discount","setDiscount","onSubmit","medicineDetails","medicineId","Math","floor","random","preventDefault","target","value","inventoryList","JSON","parse","getItem","stringify","alert","htmlFor","id","placeholder","onChange","update_inventory_details","inventory_list_after_delete_ById","setMedicineId","inventoryListAfterUpdate","updatedIndex","findIndex","prod","handleUpdate","map","item","popItem","find","handleEdit","inventoryListAfterDelete","filter","removeStock","add_executive_to_team","addSalesExecutive","firstName","setFirstName","lastName","setLastName","dob","setDob","gender","setGender","experience","setExperience","executiveDetails","salesExecutiveId","empList","name","for","teamList","update_executive_details","team_list_after_delete","console","log","setSalesExecutiveId","required","empListAfterUpdate","empListAfterDelete","allOrders","orders_list_after_delete","updateAllOrders","orders","index","customerName","contactNumber","productName","quantity","total","ordersListAfterDelete","orderId","create_order","setCustomerName","setContactNumber","setProductName","setQuantity","productList","orderDetails","cantactNumber","newOrders","pattern","maxlength","handleChange","prevState","adminLogin","salesLogin","Sidebar","path","viewOrders","logOutSales","style","marginTop","adminSignedIn","salesSignedIn","props","userData","loginEmail","setLoginEmail","loginPassword","setLoginPassword","setLoginStatus","label","eVal","pVal","Landing","selectedOption","setSelectedOption","marginLeft","marginRight","options","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","cartItem","userIdForUpdate","medicineIdForUpdate","loginReducer","store","createStore","reducer","ReactDOM","render","document","getElementById"],"mappings":"sSAAe,I,mCCeAA,EAXF,WACT,OAAO,sBAAKC,UAAU,UAAf,UACH,qBAAKA,UAAU,OAAOC,IAAI,WAAWC,IAAI,kBAEzC,qBAAKD,IAAI,aAAaC,IAAI,e,2LCPrBC,EAAc,cACdC,EAAe,eACfC,EAAuB,uBACvBC,EAAwB,wBACxBC,EAAe,eACfC,EAAsB,sBACtBC,EAAe,eACfC,EAAc,cACdC,EAAa,aACbC,EAAwB,wBACxBC,EAAuB,uBACvBC,EAAoB,oBACpBC,EAA2B,2BAC3BC,EAA2B,2BAC3BC,EAAqB,qBACrBC,EAAyB,yBCuCzBC,EAAyB,SAACC,GAAD,MAAc,CAChDC,KAAMN,EACNK,YAGSE,EAAyB,SAACF,GAAD,MAAc,CAChDC,KAAML,EACNI,YAkBSG,EAAc,SAACH,GAAD,MAAc,CACrCC,KAAMZ,EACNW,YC9DEI,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,MAAO,MACPC,OAAO,OACPC,SAAU,MACVC,OAAO,EACPC,QAAQ,EACRC,SAAS,QACTC,gBAAiBR,EAAMS,QAAQC,WAAWC,OAG5CC,OAAQ,CACNC,YAAab,EAAMc,QAAQ,IAG7BC,MAAM,CACJC,eAAe,YA8JJC,eATS,SAACC,GAAD,MAAY,CAClCC,YAAaD,EAAMC,gBAGM,SAACC,GAAD,MAAe,CACxCC,YAAa,kBAAMD,EDnLoB,CACrCzB,KAAMjB,EACNgB,QCiLsC,SAI3BuB,EA1JE,SAAC,GAA+B,IAA7BI,EAA4B,EAA5BA,YACZC,GADwC,EAAhBH,YACdrB,KAChB,EAA0ByB,IAAMC,UAAS,GAAzC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAsBH,IAAMC,UAAS,GAArC,mBAAOG,EAAP,KAAYC,EAAZ,KACA,EAAsBL,IAAMC,UAAS,GAArC,mBAAOK,EAAP,KAAYC,EAAZ,KAEMC,EAAUC,cAsBhB,OACI,mCACF,eAACC,EAAA,EAAD,CAEEC,UAAU,MACV,kBAAgB,wBAEhB5D,UAAWgD,EAAQrB,KALrB,UAQE,eAACkC,EAAA,EAAD,CAAUC,QAAM,EAACC,QA/BA,SAACC,GACpBZ,GAAUD,IA8BR,UACE,cAACc,EAAA,EAAD,UACE,cAAC,IAAD,MAEF,cAACC,EAAA,EAAD,CAAcC,QAAQ,cACrBhB,EAAQ,cAAC,IAAD,IAAiB,cAAC,IAAD,OAE5B,cAACiB,EAAA,EAAD,CAAUC,GAAIlB,EAAOmB,QAAQ,OAAOC,eAAa,EAAjD,SACE,cAACZ,EAAA,EAAD,CAAMC,UAAU,MAAMY,gBAAc,EAApC,SACA,cAAC,IAAD,CAAMC,GAAG,sBAAsBzE,UAAWgD,EAAQP,MAAlD,SACE,eAACoB,EAAA,EAAD,CAAUC,QAAM,EAAC9D,UAAWgD,EAAQV,OAApC,UACE,cAAC2B,EAAA,EAAD,UACE,cAAC,IAAD,MAEF,cAACC,EAAA,EAAD,CAAcC,QAAQ,0BAK5B,cAACC,EAAA,EAAD,CAAUC,GAAIlB,EAAOmB,QAAQ,OAAOC,eAAa,EAAjD,SACE,cAACZ,EAAA,EAAD,CAAMC,UAAU,MAAMY,gBAAc,EAApC,SACA,cAAC,IAAD,CAAMC,GAAG,oBAAoBzE,UAAWgD,EAAQP,MAAhD,SACE,eAACoB,EAAA,EAAD,CAAUC,QAAM,EAAC9D,UAAWgD,EAAQV,OAApC,UACE,cAAC2B,EAAA,EAAD,UACE,cAAC,IAAD,MAEF,cAACC,EAAA,EAAD,CAAcC,QAAQ,wBAM5B,eAACN,EAAA,EAAD,CAAUC,QAAM,EAACC,QA5DA,WACnBT,GAAQD,IA2DN,UACE,cAACY,EAAA,EAAD,UACE,cAAC,IAAD,MAEF,cAACC,EAAA,EAAD,CAAcC,QAAQ,cACrBd,EAAM,cAAC,IAAD,IAAiB,cAAC,IAAD,OAE1B,cAACe,EAAA,EAAD,CAAUC,GAAIhB,EAAKiB,QAAQ,OAAOC,eAAa,EAA/C,SACE,cAACZ,EAAA,EAAD,CAAMC,UAAU,MAAMY,gBAAc,EAApC,SACA,cAAC,IAAD,CAAMC,GAAG,6BAA6BzE,UAAWgD,EAAQP,MAAzD,SACE,eAACoB,EAAA,EAAD,CAAUC,QAAM,EAAC9D,UAAWgD,EAAQV,OAApC,UACE,cAAC2B,EAAA,EAAD,UACE,cAAC,IAAD,MAEF,cAACC,EAAA,EAAD,CAAcC,QAAQ,gCAK5B,cAACC,EAAA,EAAD,CAAUC,GAAIhB,EAAKiB,QAAQ,OAAOC,eAAa,EAA/C,SACE,cAACZ,EAAA,EAAD,CAAMC,UAAU,MAAMY,gBAAc,EAApC,SACA,cAAC,IAAD,CAAMC,GAAG,mBAAmBzE,UAAWgD,EAAQP,MAA/C,SACE,eAACoB,EAAA,EAAD,CAAUC,QAAM,EAAC9D,UAAWgD,EAAQV,OAApC,UACE,cAAC2B,EAAA,EAAD,UACE,cAAC,IAAD,MAEF,cAACC,EAAA,EAAD,CAAcC,QAAQ,4BAK5B,eAACN,EAAA,EAAD,CAAUC,QAAM,EAACC,QAxFA,WACnBP,GAAQD,IAuFN,UACE,cAACU,EAAA,EAAD,UACE,cAAC,IAAD,MAEF,cAACC,EAAA,EAAD,CAAcC,QAAQ,WACrBZ,EAAM,cAAC,IAAD,IAAiB,cAAC,IAAD,OAE1B,cAACa,EAAA,EAAD,CAAUC,GAAId,EAAKe,QAAQ,OAAOC,eAAa,EAA/C,SACE,cAACZ,EAAA,EAAD,CAAMC,UAAU,MAAMY,gBAAc,EAApC,SACA,cAAC,IAAD,CAAMC,GAAG,yBAAyBzE,UAAWgD,EAAQP,MAArD,SACE,eAACoB,EAAA,EAAD,CAAUC,QAAM,EAAC9D,UAAWgD,EAAQV,OAApC,UACE,cAAC2B,EAAA,EAAD,UACE,cAAC,IAAD,MAEF,cAACC,EAAA,EAAD,CAAcC,QAAQ,yBAK5B,cAACC,EAAA,EAAD,CAAUC,GAAId,EAAKe,QAAQ,OAAOC,eAAa,EAA/C,SACE,cAACZ,EAAA,EAAD,CAAMC,UAAU,MAAMY,gBAAc,EAApC,SACA,cAAC,IAAD,CAAMC,GAAG,uBAAuBzE,UAAWgD,EAAQP,MAAnD,SACE,eAACoB,EAAA,EAAD,CAAUC,QAAM,EAAC9D,UAAWgD,EAAQV,OAApC,UACE,cAAC2B,EAAA,EAAD,UACE,cAAC,IAAD,MAEF,cAACC,EAAA,EAAD,CAAcC,QAAQ,2BAM1B,eAACN,EAAA,EAAD,CAAUC,QAAM,EAACC,QArHH,WAGNW,aAAaC,QAAQ,eAAe,GACpCD,aAAaC,QAAQ,cAAc,GACnCD,aAAaC,QAAQ,cAAc,GAEnC5B,IACAU,EAAQmB,KAAK,MA6GrB,UACA,cAACX,EAAA,EAAD,UACE,cAAC,IAAD,MAEF,cAACC,EAAA,EAAD,CAAcC,QAAQ,uBC9GfxB,eAAQ,MAJI,SAACG,GAAD,MAAe,CACtC+B,0BAA2B,SAACzD,GAAD,OAAa0B,EFrCjB,SAAC1B,GAAD,MAAc,CACrCC,KAAMd,EACNa,WEmCiD0D,CAAY1D,QAGlDuB,EA9DA,SAAC,GAAiC,IAA/BkC,EAA8B,EAA9BA,0BACd,EAAwC3B,mBAAS,IAAjD,mBAAO6B,EAAP,KAAqBC,EAArB,KACA,EAAgD9B,mBAAS,IAAzD,mBAAO+B,EAAP,KAAyBC,EAAzB,KACA,EAA0BhC,mBAAS,GAAnC,mBAAOiC,EAAP,KAAcC,EAAd,KACA,EAA0BlC,mBAAS,GAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAgCF,mBAAS,GAAzC,mBAAOmC,EAAP,KAAiBC,EAAjB,KACM7B,EAAUC,cAyBhB,OAAO,gCACJ,0CACA,uBAAM1D,UAAU,oBAAoBuF,SAzBd,SAACvB,GACtB,IAAMwB,EAAkB,CACpBT,aAAcA,EACbE,iBAAkBA,EAClBE,MAAOA,EAAOhC,MAAOA,EACrBkC,SAAUA,EACVI,WAAYC,KAAKC,MAAuB,IAAhBD,KAAKE,SAAwB,IAG1D5B,EAAE6B,iBACF7B,EAAE8B,OAAO,GAAGC,MAAQ,GACpB/B,EAAE8B,OAAO,GAAGC,MAAQ,GACpB/B,EAAE8B,OAAO,GAAGC,MAAQ,GACpB/B,EAAE8B,OAAO,GAAGC,MAAQ,GACpB/B,EAAE8B,OAAO,GAAGC,MAAQ,GAEpBlB,EAA0BW,GAC1B,IAAIQ,EAAgBC,KAAKC,MAAMxB,aAAayB,QAAQ,mBAAqB,GACzEH,EAAcpB,KAAKY,GACnBd,aAAaC,QAAQ,gBAAiBsB,KAAKG,UAAUJ,IACrDK,MAAM,+BACN5C,EAAQmB,KAAK,sBAId,UACK,sBAAK5E,UAAU,aAAf,UACI,uBAAOsG,QAAQ,eAAf,2BACA,uBAAOjF,KAAK,OAAOrB,UAAU,eAAeuG,GAAG,eAAeC,YAAY,gBAAgBC,SAAU,SAACzC,GAAQgB,EAAgBhB,EAAE8B,OAAOC,aAE1I,sBAAK/F,UAAU,aAAf,UACI,uBAAOsG,QAAQ,mBAAf,+BACA,uBAAOjF,KAAK,OAAOrB,UAAU,eAAeuG,GAAG,mBAAmBC,YAAY,oBAAoBC,SAAU,SAACzC,GAAQkB,EAAoBlB,EAAE8B,OAAOC,aAEtJ,sBAAK/F,UAAU,aAAf,UACI,uBAAOsG,QAAQ,gBAAf,wBACA,uBAAOjF,KAAK,OAAOrB,UAAU,eAAeuG,GAAG,gBAAgBC,YAAY,QAAQC,SAAU,SAACzC,GAAQoB,EAASpB,EAAE8B,OAAOC,aAE5H,sBAAK/F,UAAU,aAAf,UACI,uBAAOsG,QAAQ,kBAAf,mBACA,uBAAOjF,KAAK,OAAOrB,UAAU,eAAeuG,GAAG,kBAAkBC,YAAY,qBAAqBC,SAAU,SAACzC,GAAQZ,EAASY,EAAE8B,OAAOC,aAE3I,sBAAK/F,UAAU,aAAf,UACI,uBAAOsG,QAAQ,kBAAf,0BACA,uBAAOjF,KAAK,OAAOrB,UAAU,eAAeuG,GAAG,kBAAkBC,YAAY,sBAAsBC,SAAU,SAACzC,GAAQA,EAAE8B,OAAOC,MAAM,KAAOT,EAAYtB,EAAE8B,OAAOC,aAErK,wBAAQ1E,KAAK,SAASrB,UAAU,kBAAhC,2C,wCCmDG2C,gBAXS,SAACC,GAAD,MAAY,CAClCoD,cAAepD,EAAMoD,kBAII,SAAClD,GAAD,MAAe,CACxC4D,yBAA0B,SAACtF,GAAD,OAAa0B,EAASxB,EAAuBF,KACvEuF,iCAAkC,SAACvF,GAAD,OAAa0B,EAASxB,EAAuBF,QAIlEuB,EArGC,SAAC,GAA8E,IAA7EqD,EAA4E,EAA5EA,cAAeU,EAA6D,EAA7DA,yBAAyBC,EAAoC,EAApCA,iCAExD,EAAoCzD,mBAAS,IAA7C,mBAAOuC,EAAP,KAAmBmB,EAAnB,KACA,EAAwC1D,mBAAS,IAAjD,mBAAO6B,EAAP,KAAqBC,EAArB,KACA,EAAgD9B,mBAAS,IAAzD,mBAAO+B,EAAP,KAAyBC,EAAzB,KACA,EAA0BhC,mBAAS,IAAnC,mBAAOiC,EAAP,KAAcC,EAAd,KACA,EAA0BlC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAgCF,mBAAS,IAAzC,mBAAOmC,EAAP,KAAiBC,EAAjB,KA8CD,OACG,8BACE,wBAAOtF,UAAU,YAAjB,UACJ,+BACE,0CACA,8CACA,uCACA,0CACA,6CAEF,+BAEE,6BAAI,uBAAOqB,KAAK,OAAQ0E,MAAOhB,EAAc0B,SAAU,SAACzC,GAAQgB,EAAgBhB,EAAE8B,OAAOC,YACzF,6BAAI,uBAAO1E,KAAK,OAAO0E,MAAOd,EAAkBwB,SAAU,SAACzC,GAAQkB,EAAoBlB,EAAE8B,OAAOC,YAChG,6BAAI,uBAAO1E,KAAK,OAAO0E,MAAOZ,EAAOsB,SAAU,SAACzC,GAAQoB,EAASpB,EAAE8B,OAAOC,YAC1E,6BAAI,uBAAO1E,KAAK,OAAO0E,MAAO5C,EAAOsD,SAAU,SAACzC,GAAQZ,EAASY,EAAE8B,OAAOC,YAC1E,6BAAI,uBAAO1E,KAAK,OAAO0E,MAAOV,EAAUoB,SAAU,SAACzC,GAAQsB,EAAYtB,EAAE8B,OAAOC,YAChF,6BAAI,wBAAQhC,QAAS,kBAlDL,SAACwC,GACnB,GAAQ,KAALA,EAAQ,CAEV,IAAMM,EAA0BZ,KAAKC,MAAMxB,aAAayB,QAAQ,kBAChEE,MAAMQ,GACN,IAAMC,EAAaD,EAAyBE,WAAU,SAACC,GAAD,OAAUA,EAAKvB,aAAec,KAEpFM,EAAyBC,GAAc/B,aAAaA,EACpD8B,EAAyBC,GAAc7B,iBAAiBA,EACxD4B,EAAyBC,GAAc3B,MAAMA,EAC7C0B,EAAyBC,GAAc3D,MAAMA,EAC7C0D,EAAyBC,GAAczB,SAASA,EAChDX,aAAaC,QAAQ,gBAAiBsB,KAAKG,UAAUS,IACrDH,EAAyBG,GAEzBD,EAAc,IACd5B,EAAgB,IAChBE,EAAoB,IACpBE,EAAS,IACThC,EAAS,IACTkC,EAAY,IA8Bc2B,CAAaxB,IAAlC,yBAGJ,uCAAUO,EAAckB,KAAI,SAAAC,GAC1B,OAAO,+BACP,6BAAKA,EAAKpC,eACV,6BAAKoC,EAAKlC,mBACV,6BAAKkC,EAAKhC,QACV,6BAAKgC,EAAKhE,QACV,6BAAKgE,EAAK9B,WACV,oBAAItB,QAAS,kBAxEA,SAACwC,GAChB,IAAMa,EAAQpB,EAAcqB,MAAK,SAACL,GAAD,OAAUA,EAAKvB,aAAec,KAE7DK,EAAcQ,EAAQ3B,YACtBT,EAAgBoC,EAAQrC,cACxBG,EAAoBkC,EAAQnC,kBAC5BG,EAASgC,EAAQjC,OACjB/B,EAASgE,EAAQjE,OACjBmC,EAAY8B,EAAQ/B,UAgEHiC,CAAWH,EAAK1B,aAAjC,SAA8C,cAAC,KAAD,MAC9C,oBAAI1B,QAAS,kBAtCC,SAACwC,GACjB,IAAIgB,EAA2BtB,KAAKC,MAAMxB,aAAayB,QAAQ,mBAAqB,GACpFoB,EAA2BA,EAAyBC,QAAO,SAAAL,GAAI,OAAIA,EAAK1B,aAAec,KACvF7B,aAAaC,QAAQ,gBAAiBsB,KAAKG,UAAUmB,IACrDZ,EAAiCY,GAkCdE,CAAYN,EAAK1B,aAAlC,SAA+C,cAAC,KAAD,QAP/B0B,EAAK1B,0BCrBZ9C,eAAQ,MAJI,SAACG,GAAD,MAAe,CACtC4E,sBAAuB,SAACtG,GAAD,OAAa0B,EJ3BP,SAAC1B,GAAD,MAAc,CAC3CC,KAAMb,EACNY,WIyB6CuG,CAAkBvG,QAGpDuB,EA3DG,SAAC,GAA6B,IAA3B+E,EAA0B,EAA1BA,sBACjB,EAAkCxE,mBAAS,IAA3C,mBAAO0E,EAAP,KAAkBC,EAAlB,KACA,EAAgC3E,mBAAS,IAAzC,mBAAO4E,EAAP,KAAiBC,EAAjB,KACA,EAAsB7E,mBAAS,IAA/B,mBAAO8E,EAAP,KAAYC,EAAZ,KACA,EAA4B/E,mBAAS,IAArC,mBAAOgF,EAAP,KAAeC,EAAf,KACA,EAAoCjF,mBAAS,GAA7C,mBAAOkF,EAAP,KAAmBC,EAAnB,KAkBA,OACA,8BACI,uBAAMrI,UAAU,oBAAoBuF,SAnBf,SAACvB,GACtB,IAAMsE,EAAmB,CAAEV,UAAWA,EAAWE,SAAUA,EAAUE,IAAKA,EAAKE,OAAQA,EAAQE,WAAYA,EAAYG,iBAAkB7C,KAAKC,MAAuB,IAAhBD,KAAKE,SAAwB,IAElL5B,EAAE6B,iBACF7B,EAAE8B,OAAO,GAAGC,MAAQ,GACpB/B,EAAE8B,OAAO,GAAGC,MAAQ,GACpB/B,EAAE8B,OAAO,GAAGC,MAAQ,GACpB/B,EAAE8B,OAAO,GAAGC,MAAQ,GACpB/B,EAAE8B,OAAO,GAAGC,MAAQ,GAEpB2B,EAAsBY,GACtB,IAAIE,EAAUvC,KAAKC,MAAMxB,aAAayB,QAAQ,aAAe,GAC7DqC,EAAQ5D,KAAK0D,GACb5D,aAAaC,QAAQ,UAAWsB,KAAKG,UAAUoC,KAM/C,UAEI,sBAAKxI,UAAU,aAAf,UACI,uBAAOsG,QAAQ,eAAf,wBACA,uBAAOjF,KAAK,OAAOrB,UAAU,eAAeuG,GAAG,eAAeC,YAAY,aAAaC,SAAU,SAACzC,GAAQ6D,EAAa7D,EAAE8B,OAAOC,aAEpI,sBAAK/F,UAAU,aAAf,UACK,uBAAOsG,QAAQ,mBAAf,uBACA,uBAAOjF,KAAK,OAAOrB,UAAU,eAAeuG,GAAG,mBAAmBC,YAAY,aAAaC,SAAU,SAACzC,GAAQ+D,EAAY/D,EAAE8B,OAAOC,aAExI,sBAAK/F,UAAU,aAAf,UACK,uBAAOsG,QAAQ,mBAAf,iBACA,uBAAOjF,KAAK,OAAOrB,UAAU,eAAeuG,GAAG,mBAAmBC,YAAY,MAAMC,SAAU,SAACzC,GAAQiE,EAAOjE,EAAE8B,OAAOC,aAE5H,sBAAK/F,UAAU,aAAf,UACA,uBAAOqB,KAAK,QAAQ0E,MAAM,OAAOQ,GAAG,OAAOE,SAAU,SAACzC,GAAKmE,EAAUnE,EAAE8B,OAAOC,QAAS0C,KAAK,WAC5F,uBAAOC,IAAI,OAAX,kBAEA,uBAAOrH,KAAK,QAAQ0E,MAAM,SAASQ,GAAG,SAASE,SAAU,SAACzC,GAAKmE,EAAUnE,EAAE8B,OAAOC,QAAS0C,KAAK,WAChG,uBAAOC,IAAI,SAAX,uBAEA,sBAAK1I,UAAU,aAAf,UACK,uBAAOsG,QAAQ,mBAAf,wBACA,uBAAOjF,KAAK,SAASrB,UAAU,eAAeuG,GAAG,mBAAmBC,YAAY,aAAcC,SAAU,SAACzC,GAAKqE,EAAcrE,EAAE8B,OAAOC,aAE1I,wBAAQ1E,KAAK,SAASrB,UAAU,kBAAhC,mCCkDK2C,gBAXS,SAACC,GAAD,MAAY,CAClC+F,SAAU/F,EAAM+F,aAIS,SAAC7F,GAAD,MAAe,CACxC8F,yBAA0B,SAACxH,GAAD,OAAa0B,EAAS3B,EAAuBC,KACvEyH,uBAAwB,SAACzH,GAAD,OAAa0B,EAAS3B,EAAuBC,QAIxDuB,EAjGE,SAAC,GAAgE,IAA9DgG,EAA6D,EAA7DA,SAAUE,EAAmD,EAAnDA,uBAAuBD,EAA4B,EAA5BA,yBACnDE,QAAQC,IAAIJ,GACZ,MAAgDzF,mBAAS,IAAzD,mBAAOqF,EAAP,KAAyBS,EAAzB,KACF,EAAkC9F,mBAAS,IAA3C,mBAAO0E,EAAP,KAAkBC,EAAlB,KACA,EAAgC3E,mBAAS,IAAzC,mBAAO4E,EAAP,KAAiBC,EAAjB,KACA,EAA4B7E,mBAAS,IAArC,mBAAOgF,EAAP,KAAeC,EAAf,KACA,EAAsBjF,mBAAS,IAA/B,mBAAO8E,EAAP,KAAYC,EAAZ,KACA,EAAoC/E,mBAAS,IAA7C,mBAAOkF,EAAP,KAAmBC,EAAnB,KA0CE,OACI,8BACA,wBAAOrI,UAAU,YAAjB,UACJ,+BACE,2CACA,0CACA,wCACA,qCACA,+CAEF,+BAEE,6BAAI,uBAAOqB,KAAK,OAAO4H,UAAQ,EAAClD,MAAO6B,EAAWnB,SAAU,SAACzC,GAAQ6D,EAAa7D,EAAE8B,OAAOC,YAC3F,6BAAI,uBAAO1E,KAAK,OAAO4H,UAAQ,EAAClD,MAAO+B,EAAUrB,SAAU,SAACzC,GAAQ+D,EAAY/D,EAAE8B,OAAOC,YACzF,6BAAI,uBAAO1E,KAAK,OAAO4H,UAAQ,EAAClD,MAAOmC,EAAQzB,SAAU,SAACzC,GAAQmE,EAAUnE,EAAE8B,OAAOC,YACrF,6BAAI,uBAAO1E,KAAK,OAAO4H,UAAQ,EAAClD,MAAOiC,EAAKvB,SAAU,SAACzC,GAAQiE,EAAOjE,EAAE8B,OAAOC,YAC/E,6BAAI,uBAAO1E,KAAK,SAAS4H,UAAQ,EAAClD,MAAOqC,EAAY3B,SAAU,SAACzC,GAAQqE,EAAcrE,EAAE8B,OAAOC,YAC/F,6BAAI,wBAAQhC,QAAS,kBAzCJ,SAACwC,GAEjB,GAAQ,KAALA,GAAsB,KAAZqB,GAA2B,KAAXE,GAAwB,KAATI,GAAmB,KAANF,GAAuB,KAAbI,EAAgB,CAC/E/B,MAAM,OACT,IAAM6C,EAAoBjD,KAAKC,MAAMxB,aAAayB,QAAQ,YAC1DE,MAAM6C,GACN,IAAMpC,EAAaoC,EAAmBnC,WAAU,SAACC,GAAD,OAAUA,EAAKuB,mBAAqBhC,KAEpF2C,EAAmBpC,GAAcc,UAAUA,EAC3CsB,EAAmBpC,GAAcgB,SAASA,EAC1CoB,EAAmBpC,GAAcoB,OAAOA,EACxCgB,EAAmBpC,GAAckB,IAAIA,EACrCkB,EAAmBpC,GAAcsB,WAAWA,EAC5C1D,aAAaC,QAAQ,UAAWsB,KAAKG,UAAU8C,IAC/CN,EAAyBM,GAEzBrB,EAAa,IACbE,EAAY,IACZI,EAAU,IACVF,EAAO,IACPI,EAAc,IAqBSpB,CAAasB,IAAlC,yBAGJ,uCAAUI,EAASzB,KAAI,SAAAC,GACrB,OAAO,+BACP,6BAAKA,EAAKS,YACV,6BAAKT,EAAKW,WACV,6BAAKX,EAAKe,SACV,6BAAKf,EAAKa,MACV,6BAAKb,EAAKiB,aACV,oBAAIrE,QAAS,kBApEA,SAACwC,GACd,IAAMa,EAAQuB,EAAStB,MAAK,SAACL,GAAD,OAAUA,EAAKuB,mBAAqBhC,KAChEsB,EAAaT,EAAQQ,WACrBG,EAAYX,EAAQU,UACpBK,EAAUf,EAAQc,QAClBD,EAAOb,EAAQY,KACfK,EAAcjB,EAAQgB,YACtBY,EAAoB5B,EAAQmB,kBA6DXjB,CAAWH,EAAKoB,mBAAjC,SAAoD,cAAC,KAAD,MACpD,oBAAIxE,QAAS,kBA3DC,SAACwC,GACf,IAAI4C,EAAqBlD,KAAKC,MAAMxB,aAAayB,QAAQ,aAAe,GACxEgD,EAAqBA,EAAmB3B,QAAO,SAAAL,GAAI,OAAIA,EAAKoB,mBAAqBhC,KACjF7B,aAAaC,QAAQ,UAAWsB,KAAKG,UAAU+C,IAC/CN,EAAuBM,GAuDN1B,CAAYN,EAAKoB,mBAAlC,SAAqD,cAAC,KAAD,QAPrCpB,EAAKoB,gCClBd5F,I,MAAAA,aAVS,SAACC,GAAD,MAAY,CAChCwG,UAAWxG,EAAMwG,cAGM,SAACtG,GAAD,MAAe,CAEtCuG,yBAA0B,SAACjI,GAAD,OAAa0B,ENLZ,SAAC1B,GAAD,MAAc,CACzCC,KAAMP,EACNM,WMGgDkI,CAAgBlI,QAIrDuB,EArDO,SAAC,GAAwC,EAAvCyG,UAAwC,IAA7BC,EAA4B,EAA5BA,yBACzBE,EAAOtD,KAAKC,MAAMxB,aAAayB,QAAQ,cAW7C,OAAO,gCACK,4CAEK,sBAAKnG,UAAU,gBAAf,UACE,sBAAMA,UAAU,oBAAhB,0BACA,sBAAMA,UAAU,iBAAhB,2BACD,sBAAMA,UAAU,oBAAhB,yBACA,sBAAMA,UAAU,oBAAhB,mBACD,sBAAMA,UAAU,oBAAhB,sBACA,sBAAMA,UAAU,oBAAhB,sBAITuJ,EAAOrC,KAAI,SAACC,EAAKqC,GACb,OAAQ,sBAAKxJ,UAAU,gBAAf,UACR,sBAAMA,UAAU,oBAAhB,SAAqCmH,EAAKsC,eAC1C,sBAAMzJ,UAAU,iBAAhB,SAAkCmH,EAAKuC,gBACvC,sBAAM1J,UAAU,oBAAhB,SAAqCmH,EAAKwC,cAC1C,sBAAM3J,UAAU,oBAAhB,SAAqCmH,EAAKhC,QAC1C,sBAAMnF,UAAU,oBAAhB,SAAqCmH,EAAKyC,WAC1C,sBAAM5J,UAAU,oBAAhB,SAAqCmH,EAAK0C,QAC1C,qCAAO,oBAAI9F,QAAS,kBA9Bd,SAACwC,GAEf,IAAIuD,EAAwB7D,KAAKC,MAAMxB,aAAayB,QAAQ,eAAiB,GAC7E2D,EAAwBA,EAAsBtC,QAAO,SAAAL,GAAI,OAAIA,EAAK4C,UAAYxD,KAC9E7B,aAAaC,QAAQ,YAAasB,KAAKG,UAAU0D,IACjDT,EAAyBS,GAyBOrC,CAAYN,EAAK4C,UAAlC,SAA4C,cAAC,KAAD,WAPPP,a,wCC4F7C7G,gBATS,SAACC,GAAD,MAAY,MAIT,SAACE,GAAD,MAAe,CACtCkH,aAAc,SAAC5I,GAAD,OAAa0B,EAASvB,EAAYH,QAIrCuB,EArHO,WAElB,MAAoCO,mBAAS,IAA7C,mBAAMuG,EAAN,KAAmBQ,EAAnB,KACA,EAAsC/G,mBAAS,IAA/C,mBAAMwG,EAAN,KAAoBQ,EAApB,KACA,EAAkChH,mBAAS,IAA3C,mBAAMyG,EAAN,KAAkBQ,EAAlB,KACA,EAAsBjH,mBAAS,GAA/B,mBAAMiC,EAAN,KAAYC,EAAZ,KACA,EAAsBlC,mBAAS,GAA/B,mBAAMC,EAAN,KAAYC,EAAZ,KACA,EAA4BF,mBAAS,GAArC,mBAAM0G,EAAN,KAAeQ,EAAf,KAEA,EAA4BlH,mBAAS,GAArC,mBAAMmC,EAAN,KAAeC,EAAf,KAGM+E,EAAYpE,KAAKC,MAAMxB,aAAayB,QAAQ,mBAAqB,GAsDvE,OAAO,8BACH,uBAAMnG,UAAU,oBAAoBuF,SA7BtB,SAACvB,GACf,IAAMsG,EAAe,CACjBP,QAASrE,KAAKC,MAAuB,IAAhBD,KAAKE,SAAwB,GAClD6D,aAAcA,EACbc,cAAeb,EACfC,YAAYA,EACZxE,MAAOA,EACPyE,SAASA,EACTC,MAAO1E,EAAMyE,EAAYzE,EAAMyE,EAASvE,EAAU,KAGnDrB,EAAE6B,iBAENtE,EAAY+I,GACZ,IAAIE,EAAYvE,KAAKC,MAAMxB,aAAayB,QAAQ,eAAiB,GACjEqE,EAAU5F,KAAK0F,GACf5F,aAAaC,QAAQ,YAAasB,KAAKG,UAAUoE,IAGjDxG,EAAE8B,OAAO,GAAGC,MAAQ,GACpB/B,EAAE8B,OAAO,GAAGC,MAAQ,GACpB/B,EAAE8B,OAAO,GAAGC,MAAQ,GACpBX,EAAS,GACTgF,EAAY,GACZD,EAAe,IAEf9D,MAAO,gCAGP,UAEI,sBAAKrG,UAAU,aAAf,UACI,uBAAOsG,QAAQ,eAAf,2BACA,uBAAOjF,KAAK,OAAO4H,UAAQ,EAACjJ,UAAU,eAAe+F,MAAO0D,EAAcjD,YAAY,gBAAgBC,SAAU,SAACzC,GAAQiG,EAAgBjG,EAAE8B,OAAOC,aAEtJ,sBAAK/F,UAAU,aAAf,UACI,uBAAOsG,QAAQ,mBAAf,2BACA,uBAAOjF,KAAK,OAAO4H,UAAQ,EAACjJ,UAAU,eAAe+F,MAAO2D,EAAelD,YAAY,gBAAgBiE,QAAQ,mBAAmBC,UAAU,KAAKjE,SAAU,SAACzC,GAAQkG,EAAiBlG,EAAE8B,OAAOC,aAElM,sBAAK/F,UAAU,aAAf,UACI,uBAAOsG,QAAQ,gBAAf,4BAEH,yBAAQC,GAAG,WAAW0C,UAAQ,EAACzC,YAAY,iBAAkBC,SAAU,SAACzC,GAAD,OAjE3D,SAACA,GAEpB,IAAMwF,EAAMa,EAAYtD,WAAU,SAAAI,GAAO,OAAOA,EAAKpC,eAAef,EAAE8B,OAAOC,SAE3EX,EAASiF,EAAYb,GAAOrE,OAE5B/B,EAASiH,EAAYb,GAAOrG,OAC5BmC,EAAY+E,EAAYb,GAAOnE,UAC/B8E,EAAenG,EAAE8B,OAAOC,OAyDyD4E,CAAa3G,IAAzF,UACe,2BACRqG,EAAYnD,KAAI,SAACC,GAAQ,OAAO,wBAAQpB,MAAOoB,EAAKpC,aAApB,SAAmCoC,EAAKpC,wBAIhF,sBAAK/E,UAAU,aAAf,UACA,uBAAOsG,QAAQ,gBAAf,6BACI,+BAAOnB,OAEX,sBAAKnF,UAAU,aAAf,UACI,uBAAOsG,QAAQ,kBAAf,6BACF,iCACI,cAAC,KAAD,CAAYvC,QA7DD,WAChB6F,EAAS,GACdQ,GAAY,SAAAQ,GAAS,OAAIA,EAAY,QA4D3B,+BAAOhB,IACP,cAAC,KAAD,CAAS7F,QArEE,WAChB6F,GAAUzG,GACbiH,GAAY,SAAAQ,GAAS,OAAIA,EAAY,cA4EnC,wBAAQvJ,KAAK,SAASrB,UAAU,kBAAhC,4BC5DG2C,I,MAAAA,aAPS,SAACC,GAAD,MAAY,CAClCiI,WAAYjI,EAAMiI,WAClBhI,YAAaD,EAAMC,YACnBiI,WAAYlI,EAAMkI,cAIoB,KAAzBnI,EApCC,SAAC,GAA2C,IAAzCkI,EAAwC,EAAxCA,WAAYhI,EAA4B,EAA5BA,YAAaiI,EAAe,EAAfA,WAE1C,OAAO,qBAAKvE,GAAG,aAAR,SAEL,eAAC,IAAD,WACA,cAACwE,EAAD,IACCjC,QAAQC,IAAI8B,EAAYhI,EAAYiI,GACrC,qBAAK9K,UAAU,4BAAf,SACA,eAAC,IAAD,WAIM6K,GAAchI,GAAe,eAAC,IAAD,CAAOmI,KAAK,oBAAZ,UAAgC,cAAC,GAAD,IAAhC,OAC5BH,GAAchI,GAAe,eAAC,IAAD,CAAOmI,KAAK,sBAAZ,UAAkC,cAAC,GAAD,IAAlC,OAC7BH,GAAchI,GAAe,eAAC,IAAD,CAAOmI,KAAK,6BAAZ,UAAyC,cAAC,GAAD,IAAzC,OAC7BH,GAAchI,GAAe,eAAC,IAAD,CAAOmI,KAAK,mBAAZ,UAA+B,cAAC,GAAD,IAA/B,OAC7BH,GAAchI,GAAe,eAAC,IAAD,CAAOmI,KAAK,yBAAZ,UAAqC,cAAC,GAAD,IAArC,OAC7BH,GAAchI,GAAe,eAAC,IAAD,CAAOmI,KAAK,uBAAZ,UAAmC,cAAC,GAAD,IAAnC,QAC5BH,IAAehI,GAAa,cAAC,IAAD,CAAOmI,KAAK,IAAZ,SAAgB,cAAC,GAAD,MAC9C,cAAC,IAAD,CAAOA,KAAK,GAAZ,SAAe,2DCHVC,GA7BE,WACb,IAAM1B,EAAOtD,KAAKC,MAAMxB,aAAayB,QAAQ,eAAe,GAC5D,OAAO,gCACJ,uDACA,gCACA,sBAAKnG,UAAU,gBAAf,UACS,sBAAMA,UAAU,oBAAhB,0BACA,sBAAMA,UAAU,iBAAhB,2BACA,sBAAMA,UAAU,oBAAhB,yBACA,sBAAMA,UAAU,oBAAhB,mBACA,sBAAMA,UAAU,oBAAhB,sBACA,sBAAMA,UAAU,oBAAhB,sBAGJuJ,EAAOrC,KAAI,SAACC,EAAKqC,GACb,OAAQ,sBAAKxJ,UAAU,gBAAf,UACR,sBAAMA,UAAU,oBAAhB,SAAqCmH,EAAKsC,eAC1C,sBAAMzJ,UAAU,iBAAhB,SAAkCmH,EAAKuC,gBACvC,sBAAM1J,UAAU,oBAAhB,SAAqCmH,EAAKwC,cAC1C,sBAAM3J,UAAU,oBAAhB,SAAqCmH,EAAKhC,QAC1C,sBAAMnF,UAAU,oBAAhB,SAAqCmH,EAAKyC,WAC1C,sBAAM5J,UAAU,oBAAhB,SAAqCmH,EAAK0C,UANEL,aCoC7C7G,gBAXS,SAACC,GAAD,MAAY,CAClCiI,WAAYjI,EAAMiI,WAClBhI,YAAaD,EAAMC,YACnBiI,WAAYlI,EAAMkI,eAEO,SAAChI,GAAD,MAAe,CACtCoI,YAAa,kBAAMpI,EV1BkB,CACrCzB,KAAMf,EACNc,QUwBwC,SAK7BuB,EA3CM,SAAC,GAAsD,IAApDE,EAAmD,EAAnDA,YAAaiI,EAAsC,EAAtCA,WAAWI,EAA2B,EAA3BA,YACtCzH,GADiE,EAAfoH,WAC1CnH,eAUd,OAAO,qBAAK6C,GAAG,aAAa4E,MAAO,CAACC,UAAU,QAAvC,SACL,eAAC,IAAD,WACF,gDACA,gCACK,+BAAM,cAAC,IAAD,CAAM3G,GAAG,eAAT,4BACN,+BAAM,cAAC,IAAD,CAAMA,GAAG,oBAAT,2BACN,sBAAMV,QAdS,WACJW,aAAaC,QAAQ,eAAe,GACpCD,aAAaC,QAAQ,cAAc,GACnCD,aAAaC,QAAQ,cAAc,GACnCuG,IACAzH,EAAQmB,KAAK,MASxB,SAA4B,cAAC,IAAD,CAAMH,GAAG,IAAT,yBAEjC,8BAEE,eAAC,IAAD,WACDqG,GAAYjI,GAAe,cAAC,IAAD,CAAOmI,KAAK,eAAZ,SAA2B,cAAC,GAAD,MACtDF,GAAYjI,GAAe,cAAC,IAAD,CAAOmI,KAAK,oBAAZ,SAAgC,cAAC,GAAD,OAC1DF,IAAejI,GAAa,cAAC,IAAD,CAAOmI,KAAK,IAAZ,SAAgB,cAAC,GAAD,mBCsDnCrI,I,MAAAA,YAAQ,MAPI,SAACG,GAAD,MAAe,CAExCuI,cAAe,kBAAMvI,EX5EiB,CACpCzB,KAAMlB,EACNiB,QW0EuC,MACzCkK,cAAe,kBAAMxI,EXnEiB,CACpCzB,KAAMhB,EACNe,QWiEuC,SAI5BuB,EAjFH,SAAC4I,GACAA,EAAMC,SAASzF,MAC1B+C,QAAQC,IAAIwC,EAAMC,SAASzF,OAC3B,MAAoC7C,mBAAS,IAA7C,mBAAOuI,EAAP,KAAmBC,EAAnB,KACA,EAA0CxI,mBAAS,IAAnD,mBAAOyI,EAAP,KAAsBC,EAAtB,KACA,EAAsC1I,mBAASwB,aAAayB,QAAQ,iBAAkB,GAAtF,mBAAOtD,EAAP,KAAoBgJ,EAApB,KACA,EAA8B3I,oBAAS,GAAvC,mBACA,GADA,UACoCA,oBAAS,IAA7C,mBACMO,GADN,UACgBC,eACI,UAAhBb,GACF6B,aAAaC,QAAQ,cAAe9B,GAyCpC,OAEA,qBAAK0D,GAAG,YAAR,SACE,uBAAMhB,SAlCQ,SAACvB,GACjBA,EAAE6B,iBAEwB,GAAtB0F,EAAMC,SAASzF,MACI,eAAf0F,GAAiD,eAAlBE,GAC/BE,GAAe,GACfnH,aAAaC,QAAQ,eAAe,GACpCD,aAAaC,QAAQ,cAAc,GACnClB,EAAQmB,KAAK,oBACb2G,EAAMF,gBACNhF,MAAM,YAGNA,MAAM,0BAGS,eAAfoF,GAAiD,eAAlBE,GAC/BE,GAAe,GACfnH,aAAaC,QAAQ,eAAe,GACpCD,aAAaC,QAAQ,cAAc,GACnClB,EAAQmB,KAAK,oBACb2G,EAAMD,gBACNjF,MAAM,aAGNA,MAAM,yBASZ,UACD,qBAAIE,GAAG,cAAP,UAAsBgF,EAAMC,SAASM,MAArC,YAEA,sBAAK9L,UAAU,MAAf,UACD,6CACA,uBAAOqB,KAAK,OAAOmF,YAAY,sBAAsByC,UAAQ,EAC7CxC,SAAU,SAACsF,GAAD,OAAUL,EAAcK,EAAKjG,OAAOC,aAEhE,sBAAK/F,UAAU,MAAf,UACE,6CACA,uBAAOqB,KAAK,WAAWmF,YAAY,sBAAsByC,UAAQ,EAACxC,SAAU,SAACuF,GAC7DJ,EAAiBI,EAAKlG,OAAOC,aAG/C,qBAAKQ,GAAG,SAASvG,UAAU,MAA3B,SACE,wBAAQqB,KAAK,SAAb,8B,SC1CW4K,GAzBD,SAAC,GAAwC,IAAvCpB,EAAsC,EAAtCA,WAAYC,EAA0B,EAA1BA,WACJ,UAD8B,EAAfjI,aACU,UAAfgI,GAAyC,UAAfC,IACpDpG,aAAaC,QAAQ,cAAe,SACpCD,aAAaC,QAAQ,aAAc,SACnCD,aAAaC,QAAQ,aAAc,UAEvC,MAA4CzB,mBAAS,MAArD,mBAAOgJ,EAAP,KAAuBC,EAAvB,KAMA,OAAO,sBAAKhB,MAAO,CAACC,UAAU,OAAOpJ,QAAQ,SAASF,SAAS,QAAQsK,WAAW,OAAOC,YAAY,QAA9F,UACF,cAAC,KAAD,CACD7F,YAAY,cACZT,MAAOmG,EACPI,QAAS,CAAC,CAACvG,MAAM,EAAE+F,MAAM,SAAS,CAAC/F,MAAM,EAAE+F,MAAM,mBACjDrF,SAViB,SAAAzC,GACjBmI,EAAkBnI,MAahBkI,GAAkB,8BAAK,cAAC,GAAD,CAAOV,SAAUU,UCCnCvJ,gBAVS,SAACC,GAAD,MAAY,CAChCC,YAAaD,EAAMC,YACnBgI,WAAYjI,EAAMiI,WAClBC,WAAYlI,EAAMkI,cAGK,GAIZnI,EArBF,SAAC,GAA6C,IAA3CE,EAA0C,EAA1CA,YAAagI,EAA6B,EAA7BA,WAAYC,EAAiB,EAAjBA,WAGrC,OAFAhC,QAAQC,IAAIlG,GACZiG,QAAQC,KAAoB,IAAhBlG,GACJ,iCACY,IAAfgI,IAAuC,IAAhBhI,GAAwB,cAAC,GAAD,KAChC,IAAfiI,IAAuC,IAAhBjI,GAAwB,cAAC,GAAD,KAC/B,IAAhBA,GAAyB,cAAC,GAAD,UCwClC,IAOeF,gBAPS,SAACC,GAAD,MAAY,CAClCiI,WAAYjI,EAAMiI,WAClBhI,YAAaD,EAAMC,YACnBiI,WAAYlI,EAAMkI,cAIoB,KAAzBnI,EAvCf,YAAuD,IAAxCkI,EAAuC,EAAvCA,WAAYhI,EAA2B,EAA3BA,YAAaiI,EAAc,EAAdA,WAEtC,OADAhC,QAAQC,IAAI8B,GAEV,qBAAK7K,UAAU,MAAf,SACA,eAAC,IAAD,WACA,cAAC,EAAD,IAEC8I,QAAQC,IAAI8B,EAAYhI,EAAYiI,GACrC,eAAC,IAAD,WACM,cAAC,IAAD,CAAOE,KAAK,IAAIuB,OAAK,EAArB,SAAsB,cAAC,GAAD,MAInB1B,GAAchI,GAAe,eAAC,IAAD,CAAOmI,KAAK,mBAAZ,UAA+B,cAAC,GAAD,IAA/B,OAC9BF,GAAcjI,GAAe,cAAC,IAAD,CAAOmI,KAAK,mBAAZ,SAA+B,cAAC,GAAD,iBCzBzDwB,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,0BCLRQ,GAAe,CAEjBpK,YAAqD,SAAxC6B,aAAayB,QAAQ,eAClC0E,WAAmD,SAAvCnG,aAAayB,QAAQ,cACjC2E,WAAmD,SAAvCpG,aAAayB,QAAQ,cACjCH,cAAeC,KAAKC,MAAMxB,aAAayB,QAAQ,mBAAqB,GACpEwC,SAAU1C,KAAKC,MAAMxB,aAAayB,QAAQ,cAAgB,GAC1DiD,UAAWnD,KAAKC,MAAMxB,aAAayB,QAAQ,eAAiB,GAC5D+G,SAAUjH,KAAKC,MAAMxB,aAAayB,QAAQ,cAAgB,GAC1DgH,gBAAiBzI,aAAayB,QAAQ,mBACtCiH,oBAAqB1I,aAAayB,QAAQ,wBA4C/BkH,GAzCM,WAA8C,IAA7CzK,EAA4C,uDAApCqK,GAAoC,yCAApB5L,EAAoB,EAApBA,KAAMD,EAAc,EAAdA,QAChD,OAAQC,GAEJ,KAAKlB,EACD,OAAO,6BAAKyC,GAAZ,IAAmBC,aAAa,EAAMgI,YAAY,IACtD,KAAKzK,EACD,OAAO,6BAAKwC,GAAZ,IAAmBC,aAAa,EAAOgI,YAAY,IACvD,KAAKxK,EACD,OAAO,6BAAKuC,GAAZ,IAAmBC,aAAa,EAAMiI,YAAY,IACtD,KAAKxK,EACD,OAAO,6BAAKsC,GAAZ,IAAmBC,aAAa,EAAOiI,YAAY,IACvD,KAAKvK,EACD,OAAO,6BAAKqC,GAAZ,IAAmBoD,cAAc,GAAD,oBAAMpD,EAAMoD,eAAZ,CAA2B5E,MAC/D,KAAKZ,EACD,OAAO,6BAAKoC,GAAZ,IAAmB+F,SAAS,GAAD,oBAAM/F,EAAM+F,UAAZ,CAAsBvH,MACrD,KAAKX,EACD,OAAO,6BAAKmC,GAAZ,IAAmBwG,UAAU,GAAD,oBAAMxG,EAAMwG,WAAZ,CAAuBhI,MACvD,KAAKV,EACD,OAAO,6BAAKkC,GAAZ,IAAmBsK,SAAS,GAAD,oBAAMtK,EAAMsK,UAAZ,CAAsB9L,MACrD,KAAKT,EACD,OAAO,6BAAKiC,GAAZ,IAAmBsK,SAAU,KACjC,KAAKtM,EACD,OAAO,6BAAKgC,GAAZ,IAAmBoD,cAAepD,EAAMoD,cAAcwB,QAAO,SAAAL,GAAI,OAAIA,EAAKpC,eAAiB3D,OAC/F,KAAKP,EACD,OAAO,6BAAK+B,GAAZ,IAAmB+F,SAAU/F,EAAM+F,SAASnB,QAAO,SAAAL,GAAI,OAAIA,EAAKoB,mBAAqBnH,OACzF,KAAKN,EACD,OAAO,6BAAK8B,GAAZ,IAAmBwG,UAAWxG,EAAMwG,UAAU5B,QAAO,SAAAL,GAAI,OAAIA,EAAK4C,UAAY3I,OAClF,KAAKL,EACD,OAAO,6BAAK6B,GAAZ,IAAmB+F,SAAUvH,IACjC,KAAKJ,EACD,OAAO,6BAAK4B,GAAZ,IAAmBoD,cAAe5E,IACtC,KAAKF,EACD,OAAO,6BAAK0B,GAAZ,IAAmBwK,oBAAqBhM,IAC5C,KAAKH,EACD,OAAO,6BAAK2B,GAAZ,IAAmBuK,gBAAiB/L,IACxC,QACI,OAAOwB,IC9CJ0K,GAFDC,aAAYC,ICK1BC,IAASC,OACP,cAAC,IAAD,CAAUJ,MAAOA,GAAjB,SACA,cAAC,GAAD,MAEAK,SAASC,eAAe,SAM1BpB,O","file":"static/js/main.a1b56d1b.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Select from 'react-select';\r\nimport \"./index.css\"\r\nconst Navbar=()=>{   \r\n    return <div className=\"top-bar\">\r\n        <img className=\"logo\" src=\"logo.jpg\" alt=\"pharmacy-logo\"/>               \r\n        \r\n        <img src=\"avatar.jpg\" alt=\"avatar\"/>\r\n\r\n        \r\n    </div>\r\n    \r\n   \r\n}\r\nexport default Navbar","export const SELECTED_OPTION = 'SELECTED_OPTION';\r\nexport const ADMIN_LOGIN = 'ADMIN_LOGIN';\r\nexport const ADMIN_LOGOUT = 'ADMIN_LOGOUT';\r\nexport const SALESEXECUTIVE_LOGIN = 'SALESEXECUTIVE_LOGIN';\r\nexport const SALESEXECUTIVE_LOGOUT = 'SALESEXECUTIVE_LOGOUT';\r\nexport const ADD_MEDICINE = 'ADD_MEDICINE';\r\nexport const ADD_SALES_EXECUTIVE = 'ADD_SALES_EXECUTIVE';\r\nexport const CREATE_ORDER = 'CREATE_ORDER';\r\nexport const ADD_TO_CART = 'ADD_TO_CART';\r\nexport const EMPTY_CART = 'EMPTY_CART';\r\nexport const UPDATE_INVENTORY_LIST = 'UPDATE_INVENTORY_LIST';\r\nexport const UPDATE_EMPLOYEE_LIST = 'UPDATE_EMPLOYEE_LIST';\r\nexport const UPDATE_ALL_ORDERS = 'UPDATE_ALL_ORDERS';\r\nexport const UPDATE_EXECUTIVE_DETAILS = 'UPDATE_EXECUTIVE_DETAILS';\r\nexport const UPDATE_INVENTORY_DETAILS = 'UPDATE_INVENTORY_DETAILS';\r\nexport const USER_ID_FOR_UPDATE = 'USER_ID_FOR_UPDATE';\r\nexport const MEDICINE_ID_FOR_UPDATE = 'MEDICINE_ID_FOR_UPDATE'","import {SELECTED_OPTION, ADMIN_LOGIN, ADMIN_LOGOUT, SALESEXECUTIVE_LOGIN, SALESEXECUTIVE_LOGOUT, ADD_MEDICINE, ADD_SALES_EXECUTIVE, CREATE_ORDER, ADD_TO_CART, EMPTY_CART, UPDATE_INVENTORY_LIST, UPDATE_EMPLOYEE_LIST, UPDATE_ALL_ORDERS, UPDATE_EXECUTIVE_DETAILS, USER_ID_FOR_UPDATE, MEDICINE_ID_FOR_UPDATE, UPDATE_MEDICINE_DETAILS, UPDATE_INVENTORY_DETAILS } from \"../actionTypes\"\r\n\r\nexport const selectedOptions = (payload) => ({\r\n    type: SELECTED_OPTION,\r\n    payload\r\n})\r\nexport const adminLogin = (payload) => ({\r\n    type: ADMIN_LOGIN,\r\n    payload\r\n})\r\n\r\nexport const adminLogout = (payload) => ({\r\n    type: ADMIN_LOGOUT,\r\n    payload\r\n})\r\n\r\nexport const salesLogin = (payload) => ({\r\n    type: SALESEXECUTIVE_LOGIN,\r\n    payload\r\n})\r\n\r\nexport const salesLogout = (payload) => ({\r\n    type: SALESEXECUTIVE_LOGOUT,\r\n    payload\r\n})\r\n\r\n// Admin Access\r\nexport const addMedicine = (payload) => ({\r\n    type: ADD_MEDICINE,\r\n    payload\r\n})\r\n\r\nexport const addSalesExecutive = (payload) => ({\r\n    type: ADD_SALES_EXECUTIVE,\r\n    payload\r\n})\r\n\r\n\r\nexport const updateInventoryList = (payload) => ({\r\n    type: UPDATE_INVENTORY_LIST,\r\n    payload\r\n})\r\n\r\nexport const updateEmployeeList = (payload) => ({\r\n    type: UPDATE_EMPLOYEE_LIST,\r\n    payload\r\n})\r\n\r\n\r\nexport const updateAllOrders = (payload) => ({\r\n    type: UPDATE_ALL_ORDERS,\r\n    payload\r\n})\r\n\r\n\r\nexport const updateExecutiveDetails = (payload) => ({\r\n    type: UPDATE_EXECUTIVE_DETAILS,\r\n    payload\r\n})\r\n\r\nexport const updateInventoryDetails = (payload) => ({\r\n    type: UPDATE_INVENTORY_DETAILS,\r\n    payload\r\n})\r\n\r\n\r\nexport const userIdForUpdate = (payload) => ({\r\n    type: USER_ID_FOR_UPDATE,\r\n    payload\r\n})\r\n\r\nexport const medicineIdForUpdate = (payload) => ({\r\n    type: MEDICINE_ID_FOR_UPDATE,\r\n    payload\r\n})\r\n\r\n\r\n\r\n// ORDERS BY EXECUTIVE\r\n\r\nexport const createOrder = (payload) => ({\r\n    type: CREATE_ORDER,\r\n    payload\r\n})\r\n\r\nexport const addToCart = (payload) => ({\r\n    type: ADD_TO_CART,\r\n    payload\r\n})\r\n\r\n\r\nexport const emptyCart = (payload) => ({\r\n    type: EMPTY_CART,\r\n    payload\r\n})","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport ExpandLess from '@material-ui/icons/ExpandLess';\r\nimport ExpandMore from '@material-ui/icons/ExpandMore';\r\nimport StarBorder from '@material-ui/icons/StarBorder';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport StoreIcon from '@material-ui/icons/Store';\r\nimport PeopleIcon from '@material-ui/icons/People';\r\nimport LocalHospitalIcon from '@material-ui/icons/LocalHospital';\r\n\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { adminLogout } from '../../../actions';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '90%',\r\n    height:'90vh',\r\n    maxWidth: \"16%\",\r\n    margin:0,\r\n    padding:0,\r\n    position:'fixed',\r\n    backgroundColor: theme.palette.background.paper,\r\n    \r\n  },\r\n  nested: {\r\n    paddingLeft: theme.spacing(3),\r\n    \r\n  },\r\n  links:{\r\n    textDecoration:\"none\",\r\n  },\r\n}));\r\n\r\nconst NestedList=({ logOutAdmin,loginStatus })=>{\r\n  const classes = useStyles();\r\n  const [stock, setStock] = React.useState(false);\r\n  const [emp, setEmp] = React.useState(false);\r\n  const [ord, setOrd] = React.useState(false);\r\n  // const [loginStatus,setLoginStatus]=React.useState(\"true\")\r\n  const history = useHistory()\r\n  const ihandleClick = (e) => {\r\n    setStock(!stock);\r\n  };\r\n  const ehandleClick = () => {\r\n    setEmp(!emp);\r\n  };\r\n  const ohandleClick = () => {\r\n    setOrd(!ord);\r\n  };\r\n  const handleClick = () => {\r\n    // setLoginStatus(!loginStatus);\r\n   \r\n                localStorage.setItem('loginStatus', false)\r\n                localStorage.setItem('adminLogin', false)\r\n                localStorage.setItem('salesLogin', false)\r\n               \r\n                logOutAdmin()\r\n                history.push(\"/\")\r\n       \r\n  };\r\n\r\n  return (\r\n      <>\r\n    <List\r\n    \r\n      component=\"nav\"\r\n      aria-labelledby=\"nested-list-subheader\"\r\n   \r\n      className={classes.root}\r\n    >\r\n     \r\n      <ListItem button onClick={ihandleClick}>\r\n        <ListItemIcon>\r\n          <StoreIcon />\r\n        </ListItemIcon>\r\n        <ListItemText primary=\"Inventory\" />\r\n        {stock ? <ExpandLess /> : <ExpandMore />}\r\n      </ListItem>\r\n      <Collapse in={stock} timeout=\"auto\" unmountOnExit>\r\n        <List component=\"div\" disablePadding>\r\n        <Link to=\"/admin/add_medicine\" className={classes.links}>\r\n          <ListItem button className={classes.nested}>          \r\n            <ListItemIcon>\r\n              <StarBorder />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Add Medicine\" />           \r\n          </ListItem> \r\n          </Link>         \r\n        </List>\r\n      </Collapse>\r\n      <Collapse in={stock} timeout=\"auto\" unmountOnExit>\r\n        <List component=\"div\" disablePadding>\r\n        <Link to=\"/admin/view_stock\" className={classes.links}>\r\n          <ListItem button className={classes.nested}>          \r\n            <ListItemIcon>\r\n              <StarBorder />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"View Stock\" />           \r\n          </ListItem> \r\n          </Link>         \r\n        </List>\r\n      </Collapse>\r\n\r\n      <ListItem button onClick={ehandleClick}>\r\n        <ListItemIcon>\r\n          <PeopleIcon />\r\n        </ListItemIcon>\r\n        <ListItemText primary=\"Employees\" />\r\n        {emp ? <ExpandLess /> : <ExpandMore />}\r\n      </ListItem>\r\n      <Collapse in={emp} timeout=\"auto\" unmountOnExit>\r\n        <List component=\"div\" disablePadding>\r\n        <Link to=\"/admin/add_sales_executive\" className={classes.links}>\r\n          <ListItem button className={classes.nested}>        \r\n            <ListItemIcon>\r\n              <StarBorder />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Add SalesExecutive\" />            \r\n          </ListItem> \r\n          </Link>         \r\n        </List>\r\n      </Collapse>\r\n      <Collapse in={emp} timeout=\"auto\" unmountOnExit>\r\n        <List component=\"div\" disablePadding>\r\n        <Link to=\"/admin/view_team\" className={classes.links}>\r\n          <ListItem button className={classes.nested}>          \r\n            <ListItemIcon>\r\n              <StarBorder />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"View Employees\" />            \r\n          </ListItem>\r\n          </Link>          \r\n        </List>\r\n      </Collapse>\r\n      <ListItem button onClick={ohandleClick}>\r\n        <ListItemIcon>\r\n          <LocalHospitalIcon />\r\n        </ListItemIcon>\r\n        <ListItemText primary=\"Orders\" />\r\n        {ord ? <ExpandLess /> : <ExpandMore />}\r\n      </ListItem>     \r\n      <Collapse in={ord} timeout=\"auto\" unmountOnExit>     \r\n        <List component=\"div\" disablePadding>\r\n        <Link to=\"/admin/show_all_orders\" className={classes.links}>\r\n          <ListItem button className={classes.nested}>          \r\n            <ListItemIcon>\r\n              <StarBorder />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"View Orders\" />           \r\n          </ListItem> \r\n          </Link>         \r\n        </List>\r\n      </Collapse>\r\n      <Collapse in={ord} timeout=\"auto\" unmountOnExit>\r\n        <List component=\"div\" disablePadding>\r\n        <Link to=\"/admin/create_orders\" className={classes.links}>\r\n          <ListItem button className={classes.nested}>         \r\n            <ListItemIcon>\r\n              <StarBorder />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Create Orders\" />           \r\n          </ListItem> \r\n          </Link>         \r\n        </List>\r\n      </Collapse>\r\n      {/* <Link to=\"/\" className={classes.links}> */}\r\n        <ListItem button onClick={handleClick}>        \r\n        <ListItemIcon>\r\n          <ExitToAppIcon />\r\n        </ListItemIcon>\r\n        <ListItemText primary=\"Log-Out\" />        \r\n      </ListItem>\r\n      \r\n    </List>\r\n    \r\n    </>\r\n  );\r\n}\r\nconst mapStateToProps = (state) => ({\r\n  loginStatus: state.loginStatus\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  logOutAdmin: () => dispatch(adminLogout(''))\r\n\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(NestedList)","import React, { useState } from 'react';\r\n// import \"./addMedicine.css\";\r\nimport { connect } from 'react-redux'\r\nimport { addMedicine } from '../../actions/index';\r\nimport { useHistory } from 'react-router-dom';\r\nconst AddStock=({ add_medicine_to_inventory })=>{\r\n    const [medicineName, setMedicineName] = useState('')\r\n    const [manufacturerName, setManufacturerName] = useState('')\r\n    const [price, setPrice] = useState(0)\r\n    const [stock, setStock] = useState(0)\r\n    const [discount, setDiscount] = useState(0)\r\n    const history = useHistory()\r\n\r\n    const handleFormSubmit = (e) => {\r\n        const medicineDetails = { \r\n            medicineName: medicineName,\r\n             manufacturerName: manufacturerName, \r\n             price: price, stock: stock, \r\n             discount: discount, \r\n             medicineId: Math.floor((Math.random() * 100000000) + 1) \r\n            }\r\n\r\n        e.preventDefault();\r\n        e.target[0].value = ''\r\n        e.target[1].value = ''\r\n        e.target[2].value = ''\r\n        e.target[3].value = ''\r\n        e.target[4].value = ''\r\n\r\n        add_medicine_to_inventory(medicineDetails)\r\n        var inventoryList = JSON.parse(localStorage.getItem('inventoryList')) || [];\r\n        inventoryList.push(medicineDetails);\r\n        localStorage.setItem('inventoryList', JSON.stringify(inventoryList));\r\n        alert(\"stock inserted successfully\")\r\n        history.push(\"/admin/view_stock\")\r\n    }\r\n    return <div >\r\n       <h2>Medicine</h2>\r\n       <form className=\"add_medicine_form\" onSubmit={handleFormSubmit}>\r\n            <div className=\"form-group\">\r\n                <label htmlFor=\"medicineName\">Medicine Name</label>\r\n                <input type=\"text\" className=\"form-control\" id=\"medicineName\" placeholder=\"Medicine name\" onChange={(e) => { setMedicineName(e.target.value) }} />\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label htmlFor=\"manufacturerName\">Manufacturer Name</label>\r\n                <input type=\"text\" className=\"form-control\" id=\"manufacturerName\" placeholder=\"Manufacturer Name\" onChange={(e) => { setManufacturerName(e.target.value) }} />\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label htmlFor=\"medicinePrice\">Price(INR)</label>\r\n                <input type=\"text\" className=\"form-control\" id=\"medicinePrice\" placeholder=\"price\" onChange={(e) => { setPrice(e.target.value) }} />\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label htmlFor=\"medicineInStock\">Stock</label>\r\n                <input type=\"text\" className=\"form-control\" id=\"medicineInStock\" placeholder=\"Available quantity\" onChange={(e) => { setStock(e.target.value) }} />\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label htmlFor=\"discountPercent\">Discount (%)</label>\r\n                <input type=\"text\" className=\"form-control\" id=\"discountPercent\" placeholder=\"Discount in percent\" onChange={(e) => { e.target.value<100 && setDiscount(e.target.value) }} />\r\n            </div>\r\n            <button type=\"submit\" className=\"btn btn-primary\">Add to the Inventory</button>\r\n        </form>\r\n    </div>\r\n}\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    add_medicine_to_inventory: (payload) => dispatch(addMedicine(payload))\r\n})\r\n\r\nexport default connect(null, mapDispatchToProps)(AddStock)","import React, { useState } from 'react';\r\n\r\nimport { connect } from 'react-redux';\r\n\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { updateInventoryDetails } from '../../actions';\r\n\r\n\r\nconst ViewStock=({inventoryList, update_inventory_details,inventory_list_after_delete_ById})=>{\r\n \r\n  const [medicineId, setMedicineId] = useState('')\r\n  const [medicineName, setMedicineName] = useState('')\r\n  const [manufacturerName, setManufacturerName] = useState('')\r\n  const [price, setPrice] = useState(\"\")\r\n  const [stock, setStock] = useState(\"\")\r\n  const [discount, setDiscount] = useState(\"\") \r\n  const handleEdit=(id)=>{    \r\n    const popItem=inventoryList.find((prod) => prod.medicineId === id)\r\n       \r\n      setMedicineId(popItem.medicineId);\r\n      setMedicineName(popItem.medicineName)\r\n      setManufacturerName(popItem.manufacturerName)\r\n      setPrice(popItem.price)\r\n      setStock(popItem.stock)\r\n      setDiscount(popItem.discount)    \r\n     \r\n    }\r\n \r\n const handleUpdate=(id)=>{\r\n  if(id!==\"\"){\r\n  \r\n   const inventoryListAfterUpdate= JSON.parse(localStorage.getItem('inventoryList')) ;\r\n   alert(inventoryListAfterUpdate)\r\n   const updatedIndex=inventoryListAfterUpdate.findIndex((prod) => prod.medicineId === id)\r\n \r\n   inventoryListAfterUpdate[updatedIndex].medicineName=medicineName;\r\n   inventoryListAfterUpdate[updatedIndex].manufacturerName=manufacturerName;\r\n   inventoryListAfterUpdate[updatedIndex].price=price;\r\n   inventoryListAfterUpdate[updatedIndex].stock=stock;\r\n   inventoryListAfterUpdate[updatedIndex].discount=discount;   \r\n   localStorage.setItem('inventoryList', JSON.stringify(inventoryListAfterUpdate));\r\n   update_inventory_details(inventoryListAfterUpdate)\r\n   }\r\n   setMedicineId(\"\")\r\n   setMedicineName(\"\")\r\n   setManufacturerName(\"\")\r\n   setPrice(\"\")\r\n   setStock(\"\")\r\n   setDiscount(\"\")\r\n\r\n  }\r\n  const removeStock=(id)=>{\r\n    var inventoryListAfterDelete = JSON.parse(localStorage.getItem('inventoryList')) || [];\r\n    inventoryListAfterDelete = inventoryListAfterDelete.filter(item => item.medicineId !== id)\r\n    localStorage.setItem('inventoryList', JSON.stringify(inventoryListAfterDelete));\r\n    inventory_list_after_delete_ById(inventoryListAfterDelete)    \r\n\r\n  }\r\n  \r\n   \r\n \r\n return(\r\n    <div>\r\n      <table className=\"gridtable\">\r\n  <tr>\r\n    <th>Medicine</th>\r\n    <th>Manufacturer</th>\r\n    <th>Price</th>\r\n    <th>quantity</th>\r\n    <th>Discount</th>\r\n  </tr>\r\n  <tr>\r\n   \r\n    <td><input type=\"text\"  value={medicineName} onChange={(e) => { setMedicineName(e.target.value) }}></input></td>\r\n    <td><input type=\"text\" value={manufacturerName} onChange={(e) => { setManufacturerName(e.target.value) }}></input></td>\r\n    <td><input type=\"text\" value={price} onChange={(e) => { setPrice(e.target.value) }}></input></td>\r\n    <td><input type=\"text\" value={stock} onChange={(e) => { setStock(e.target.value) }}></input></td>\r\n    <td><input type=\"text\" value={discount} onChange={(e) => { setDiscount(e.target.value) }}></input></td>\r\n    <td><button onClick={()=>handleUpdate(medicineId)}>Update</button></td>\r\n   \r\n  </tr>\r\n    <tbody>  {inventoryList.map(item =>{    \r\n      return <tr key={item.medicineId}>\r\n      <td>{item.medicineName}</td>\r\n      <td>{item.manufacturerName}</td>\r\n      <td>{item.price}</td>\r\n      <td>{item.stock}</td>\r\n      <td>{item.discount}</td>\r\n      <td onClick={()=>handleEdit(item.medicineId)}><EditIcon/></td>\r\n      <td onClick={()=>removeStock(item.medicineId)}><DeleteIcon/></td>\r\n    </tr>\r\n  })}\r\n  </tbody>\r\n</table>\r\n    </div>\r\n  )\r\n\r\n}\r\nconst mapStateToProps = (state) => ({\r\n  inventoryList: state.inventoryList,\r\n \r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  update_inventory_details: (payload) => dispatch(updateInventoryDetails(payload)),\r\n  inventory_list_after_delete_ById: (payload) => dispatch(updateInventoryDetails(payload)),\r\n})\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ViewStock);","import React,{useState} from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { addSalesExecutive } from '../../actions/index'\r\nconst AddEmployee=({ add_executive_to_team })=>{\r\n    const [firstName, setFirstName] = useState('')\r\n    const [lastName, setLastName] = useState('')\r\n    const [dob, setDob] = useState('')\r\n    const [gender, setGender] = useState('')\r\n    const [experience, setExperience] = useState(0)\r\n    const handleFormSubmit = (e) => {\r\n        const executiveDetails = { firstName: firstName, lastName: lastName, dob: dob, gender: gender, experience: experience, salesExecutiveId: Math.floor((Math.random() * 100000000) + 1) }\r\n\r\n        e.preventDefault();\r\n        e.target[0].value = ''\r\n        e.target[1].value = ''\r\n        e.target[2].value = ''\r\n        e.target[3].value = ''\r\n        e.target[4].value = ''\r\n\r\n        add_executive_to_team(executiveDetails)\r\n        var empList = JSON.parse(localStorage.getItem('empList')) || [];\r\n        empList.push(executiveDetails);\r\n        localStorage.setItem('empList', JSON.stringify(empList));\r\n    }\r\n\r\n\r\n    return(\r\n    <div>\r\n        <form className=\"add_medicine_form\" onSubmit={handleFormSubmit}>\r\n\r\n            <div className=\"form-group\">\r\n                <label htmlFor=\"medicineName\">First Name</label>\r\n                <input type=\"text\" className=\"form-control\" id=\"medicineName\" placeholder=\"First Name\" onChange={(e) => { setFirstName(e.target.value) }} />\r\n            </div>\r\n            <div className=\"form-group\">\r\n                 <label htmlFor=\"manufacturerName\">Last Name</label>\r\n                 <input type=\"text\" className=\"form-control\" id=\"manufacturerName\" placeholder=\"Last Name \" onChange={(e) => { setLastName(e.target.value) }}/>\r\n            </div>\r\n            <div className=\"form-group\">\r\n                 <label htmlFor=\"manufacturerName\">DOB</label>\r\n                 <input type=\"date\" className=\"form-control\" id=\"manufacturerName\" placeholder=\"DOB\" onChange={(e) => { setDob(e.target.value) }}/>\r\n            </div>\r\n            <div className=\"form-group\">\r\n            <input type=\"radio\" value=\"male\" id=\"male\" onChange={(e)=>{setGender(e.target.value)}} name=\"gender\" />\r\n            <label for=\"male\">Male</label>\r\n\r\n            <input type=\"radio\" value=\"female\" id=\"female\" onChange={(e)=>{setGender(e.target.value)}} name=\"gender\"/>\r\n            <label for=\"female\">Female</label>                \r\n            </div>\r\n            <div className=\"form-group\">\r\n                 <label htmlFor=\"manufacturerName\">Experience</label>\r\n                 <input type=\"number\" className=\"form-control\" id=\"manufacturerName\" placeholder=\"Experience\"  onChange={(e)=>{setExperience(e.target.value)}}  />\r\n            </div>\r\n            <button type=\"submit\" className=\"btn btn-primary\">Add Executive</button>\r\n        </form>\r\n    </div>\r\n    )}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    add_executive_to_team: (payload) => dispatch(addSalesExecutive(payload))\r\n})\r\n\r\nexport default connect(null, mapDispatchToProps)(AddEmployee)","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux'\r\nimport { updateExecutiveDetails } from '../../actions';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\nconst ViewEmployee=({ teamList, team_list_after_delete,update_executive_details})=>{\r\n    console.log(teamList)\r\n    const [salesExecutiveId, setSalesExecutiveId] = useState('')\r\n  const [firstName, setFirstName] = useState('')\r\n  const [lastName, setLastName] = useState('')\r\n  const [gender, setGender] = useState(\"\")\r\n  const [dob, setDob] = useState(\"\")\r\n  const [experience, setExperience] = useState(\"\")\r\n    const handleEdit=(id)=>{  \r\n        const popItem=teamList.find((prod) => prod.salesExecutiveId === id)       \r\n        setFirstName(popItem.firstName);\r\n        setLastName(popItem.lastName)\r\n        setGender(popItem.gender)\r\n        setDob(popItem.dob)\r\n        setExperience(popItem.experience)\r\n        setSalesExecutiveId(popItem.salesExecutiveId)\r\n       \r\n    }\r\n    const removeStock=(id)=>{\r\n        var empListAfterDelete = JSON.parse(localStorage.getItem('empList')) || [];\r\n        empListAfterDelete = empListAfterDelete.filter(item => item.salesExecutiveId !== id)\r\n        localStorage.setItem('empList', JSON.stringify(empListAfterDelete));\r\n        team_list_after_delete(empListAfterDelete)    \r\n\r\n    }\r\n    const handleUpdate=(id)=>{\r\n     \r\n       if(id!==\"\"&& firstName!==\"\"&&lastName!==\"\"&&gender!==\"\"&&dob!==\"\"&&experience!==\"\"){\r\n           alert(\"ajj\")\r\n        const empListAfterUpdate= JSON.parse(localStorage.getItem('empList')) ;\r\n        alert(empListAfterUpdate)\r\n        const updatedIndex=empListAfterUpdate.findIndex((prod) => prod.salesExecutiveId === id)   \r\n      \r\n        empListAfterUpdate[updatedIndex].firstName=firstName;\r\n        empListAfterUpdate[updatedIndex].lastName=lastName;\r\n        empListAfterUpdate[updatedIndex].gender=gender;\r\n        empListAfterUpdate[updatedIndex].dob=dob;\r\n        empListAfterUpdate[updatedIndex].experience=experience;   \r\n        localStorage.setItem('empList', JSON.stringify(empListAfterUpdate));\r\n        update_executive_details(empListAfterUpdate)\r\n        }\r\n        setFirstName(\"\")\r\n        setLastName(\"\")\r\n        setGender(\"\")\r\n        setDob(\"\")\r\n        setExperience(\"\")    \r\n       \r\n   \r\n    }\r\n    return(\r\n        <div>\r\n        <table className=\"gridtable\">\r\n    <tr>\r\n      <th>FirstName</th>\r\n      <th>LastName</th>\r\n      <th>Gender</th>\r\n      <th>DOB</th>\r\n      <th>Experience</th>\r\n    </tr>\r\n    <tr>\r\n    \r\n      <td><input type=\"text\" required value={firstName} onChange={(e) => { setFirstName(e.target.value) }}></input></td>\r\n      <td><input type=\"text\" required value={lastName} onChange={(e) => { setLastName(e.target.value) }}></input></td>\r\n      <td><input type=\"text\" required value={gender} onChange={(e) => { setGender(e.target.value) }}></input></td>\r\n      <td><input type=\"date\" required value={dob} onChange={(e) => { setDob(e.target.value) }}></input></td>\r\n      <td><input type=\"Number\" required value={experience} onChange={(e) => { setExperience(e.target.value) }}></input></td>\r\n      <td><button onClick={()=>handleUpdate(salesExecutiveId)}>Update</button></td> \r\n     \r\n    </tr>\r\n      <tbody>  {teamList.map(item =>{    \r\n        return <tr key={item.salesExecutiveId}>\r\n        <td>{item.firstName}</td>\r\n        <td>{item.lastName}</td>\r\n        <td>{item.gender}</td>\r\n        <td>{item.dob}</td>\r\n        <td>{item.experience}</td>\r\n        <td onClick={()=>handleEdit(item.salesExecutiveId)}><EditIcon/></td>\r\n        <td onClick={()=>removeStock(item.salesExecutiveId)}><DeleteIcon/></td>\r\n      </tr>\r\n    })}\r\n    </tbody>\r\n  </table>\r\n      </div>\r\n    )\r\n  \r\n  }\r\n  const mapStateToProps = (state) => ({\r\n    teamList: state.teamList,\r\n   \r\n  })\r\n  \r\n  const mapDispatchToProps = (dispatch) => ({\r\n    update_executive_details: (payload) => dispatch(updateExecutiveDetails(payload)),\r\n    team_list_after_delete: (payload) => dispatch(updateExecutiveDetails(payload)),\r\n  })\r\n  \r\n  \r\n  export default connect(mapStateToProps, mapDispatchToProps)(ViewEmployee);","import React from 'react';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { connect } from 'react-redux';\r\nimport { updateAllOrders } from \"../../actions/index\";\r\nimport \"./viewOrders.css\" \r\nconst AdminviewOrders=({allOrders, orders_list_after_delete})=>{\r\n    const orders=JSON.parse(localStorage.getItem(\"allOrders\"));   \r\n    \r\n    const removeStock=(id)=>{\r\n       \r\n        var ordersListAfterDelete = JSON.parse(localStorage.getItem('allOrders')) || [];\r\n        ordersListAfterDelete = ordersListAfterDelete.filter(item => item.orderId !== id)\r\n        localStorage.setItem('allOrders', JSON.stringify(ordersListAfterDelete));\r\n        orders_list_after_delete(ordersListAfterDelete)  \r\n\r\n    }\r\n\r\n    return <div>\r\n                <h2>All Orders</h2>\r\n                 \r\n                     <div className=\"medicine-card\" >               \r\n                       <span className=\"manufacturer-name\">customerName</span>\r\n                       <span className=\"medicine-price\">contactNumber</span>\r\n                      <span className=\"medicine-quantity\">productName</span>\r\n                      <span className=\"medicine-discount\">price</span>\r\n                     <span className=\"medicine-discount\">quantity</span>\r\n                     <span className=\"medicine-discount\">total</span>\r\n                   </div>\r\n        {\r\n            \r\n            orders.map((item,index)=>{\r\n                return  <div className=\"medicine-card\" key={index} >               \r\n                <span className=\"manufacturer-name\">{item.customerName}</span>\r\n                <span className=\"medicine-price\">{item.contactNumber}</span>\r\n                <span className=\"medicine-quantity\">{item.productName}</span>\r\n                <span className=\"medicine-discount\">{item.price}</span>\r\n                <span className=\"medicine-discount\">{item.quantity}</span>\r\n                <span className=\"medicine-discount\">{item.total}</span>              \r\n                <span> <td onClick={()=>removeStock(item.orderId)}><DeleteIcon/></td></span>\r\n             </div>\r\n            \r\n            })\r\n        }\r\n       \r\n\r\n    </div>\r\n    \r\n}\r\nconst mapStateToProps = (state) => ({\r\n    allOrders: state.allOrders\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    \r\n    orders_list_after_delete: (payload) => dispatch(updateAllOrders(payload)),\r\n    \r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AdminviewOrders);\r\n\r\n","import React,{useState} from 'react';\r\nimport { connect } from 'react-redux'\r\nimport { createOrder, emptyCart } from \"../../actions/index\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport RemoveIcon from '@material-ui/icons/Remove';\r\n\r\nconst CreateListOrder=()=>{\r\n    \r\n    const[customerName,setCustomerName]=useState(\"\");\r\n    const[contactNumber,setContactNumber]=useState(\"\");\r\n    const[productName,setProductName]=useState(\"\");\r\n    const[price,setPrice]=useState(0)\r\n    const[stock,setStock]=useState(0);\r\n    const[quantity,setQuantity]=useState(0)\r\n    \r\n    const[discount,setDiscount]=useState(0)\r\n    \r\n    \r\n    const productList=JSON.parse(localStorage.getItem(\"inventoryList\")) || []\r\n   \r\n   \r\n    const handleChange = (e) => {\r\n        \r\n      const index=productList.findIndex(item=>{return item.medicineName===e.target.value})\r\n      \r\n        setPrice(productList[index].price)\r\n       \r\n        setStock(productList[index].stock)\r\n        setDiscount(productList[index].discount)\r\n        setProductName(e.target.value)\r\n\r\n      }\r\n      const increaseQuantity=()=>{\r\n          if(quantity<=stock){\r\n          setQuantity(prevState => prevState + 1)\r\n       \r\n          }\r\n      }\r\n      const decreaseQuantity=()=>{\r\n          if(quantity>0){\r\n        setQuantity(prevState => prevState - 1)\r\n       \r\n          }\r\n    }\r\n    const handleForm= (e) => {\r\n        const orderDetails = { \r\n            orderId: Math.floor((Math.random() * 100000000) + 1) ,\r\n            customerName: customerName,\r\n             cantactNumber: contactNumber, \r\n             productName:productName,\r\n             price: price,\r\n             quantity:quantity,\r\n             total:(price*quantity)-((price*quantity*discount)/100)           \r\n            \r\n            }\r\n            e.preventDefault(); \r\n\r\n        createOrder(orderDetails)\r\n        var newOrders = JSON.parse(localStorage.getItem('allOrders')) || [];\r\n        newOrders.push(orderDetails);\r\n        localStorage.setItem('allOrders', JSON.stringify(newOrders));\r\n        \r\n       \r\n        e.target[0].value = ''\r\n        e.target[1].value = ''\r\n        e.target[2].value = ''\r\n        setPrice(0)\r\n        setQuantity(0)\r\n        setProductName(\"\")\r\n        \r\n        alert( \"Oreder created successfully\")\r\n    }\r\n    return <div>\r\n        <form className=\"add_medicine_form\" onSubmit={handleForm}>\r\n\r\n            <div className=\"form-group\">\r\n                <label htmlFor=\"medicineName\">Customer Name</label>\r\n                <input type=\"text\" required className=\"form-control\" value={customerName} placeholder=\"Customer Name\" onChange={(e) => { setCustomerName(e.target.value) }} />\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label htmlFor=\"manufacturerName\">ContactNumber</label>\r\n                <input type=\"text\" required className=\"form-control\" value={contactNumber} placeholder=\"ContactNumber\" pattern=\"[1-9]{1}[0-9]{9}\" maxlength=\"10\" onChange={(e) => { setContactNumber(e.target.value) }}/>\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label htmlFor=\"medicinePrice\"> Slect Product</label>\r\n               \r\n             <select id=\"dropdown\" required placeholder=\"Select Product\"  onChange={(e)=>handleChange(e)} >\r\n                            <option></option>\r\n                   {productList.map((item)=>{return <option value={item.medicineName}>{item.medicineName}</option>})}\r\n            </select>\r\n      \r\n            </div>\r\n            <div className=\"form-group\">\r\n            <label htmlFor=\"medicinePrice\">Price per uint </label>\r\n                <span>{price}</span>\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label htmlFor=\"medicineInStock\">Select Quantity</label>\r\n              <span>\r\n                  <RemoveIcon onClick={decreaseQuantity}/>\r\n                  <span>{quantity}</span>\r\n                  <AddIcon onClick={increaseQuantity}/>\r\n              </span>\r\n            </div>\r\n            {/* <div className=\"form-group\">\r\n            <label htmlFor=\"medicineInStock\">Amount</label>\r\n                <span>{total}</span>\r\n            </div> */}\r\n           \r\n           \r\n            <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\r\n        </form>\r\n    </div>\r\n}\r\nconst mapStateToProps = (state) => ({\r\n   \r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    create_order: (payload) => dispatch(createOrder(payload)),\r\n   \r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateListOrder);\r\n ","import React from 'react';\r\nimport { BrowserRouter,Switch,Route} from 'react-router-dom';\r\nimport Sidebar from \"./Sidebar/index\";\r\nimport AddStock from \"./addStock\";\r\nimport ViewStock from \"./viewStock\";\r\nimport AddEmploye from \"./addEmployee\";\r\nimport  ViewEmployes from \"./viewEmployes\";\r\nimport ShowOrders from \"./viewOrders\";\r\nimport CreateOrder from \"./createOrder\";\r\nimport { connect } from 'react-redux';\r\nimport Home from '../Home/index';\r\nimport \"./index.css\"\r\n\r\n\r\nconst AdminHome=({ adminLogin, loginStatus, salesLogin })=>{ \r\n   \r\n  return <div id=\"admin-home\">\r\n   \r\n    <BrowserRouter>\r\n    <Sidebar/>\r\n    {console.log(adminLogin, loginStatus,salesLogin)}\r\n    <div className=\"admin-home-rightContainer\">\r\n    <Switch>\r\n      \r\n         \r\n         \r\n         {adminLogin && loginStatus && <Route path=\"/admin/view_stock\"><ViewStock/> </Route>}\r\n          {adminLogin && loginStatus && <Route path=\"/admin/add_medicine\"><AddStock /> </Route>}\r\n          {adminLogin && loginStatus && <Route path=\"/admin/add_sales_executive\"><AddEmploye /> </Route>}\r\n          {adminLogin && loginStatus && <Route path=\"/admin/view_team\"><ViewEmployes /> </Route>}\r\n          {adminLogin && loginStatus && <Route path=\"/admin/show_all_orders\"><ShowOrders /> </Route>}\r\n          {adminLogin && loginStatus && <Route path=\"/admin/create_orders\"><CreateOrder /> </Route>}\r\n          {!adminLogin && !loginStatus&&<Route path=\"/\"><Home/></Route>}\r\n          <Route path=\"\"><h1>404 Error</h1></Route>\r\n      \r\n          </Switch>\r\n          </div>\r\n    </BrowserRouter>\r\n\r\n\r\n  </div>\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  adminLogin: state.adminLogin,\r\n  loginStatus: state.loginStatus,\r\n  salesLogin: state.salesLogin\r\n})\r\n\r\n\r\nexport default connect(mapStateToProps, null)(AdminHome)","import React from 'react';\r\nconst viewOrders=()=>{\r\n    const orders=JSON.parse(localStorage.getItem(\"allOrders\"))||[]\r\n    return <div >\r\n       <h2>SalesExecutive Orders</h2>\r\n       <div>\r\n       <div className=\"medicine-card\" >               \r\n                <span className=\"manufacturer-name\">customerName</span>\r\n                <span className=\"medicine-price\">contactNumber</span>\r\n                <span className=\"medicine-quantity\">productName</span>\r\n                <span className=\"medicine-discount\">price</span>\r\n                <span className=\"medicine-discount\">quantity</span>\r\n                <span className=\"medicine-discount\">total</span>\r\n            </div>\r\n        {\r\n            orders.map((item,index)=>{\r\n                return  <div className=\"medicine-card\" key={index} >               \r\n                <span className=\"manufacturer-name\">{item.customerName}</span>\r\n                <span className=\"medicine-price\">{item.contactNumber}</span>\r\n                <span className=\"medicine-quantity\">{item.productName}</span>\r\n                <span className=\"medicine-discount\">{item.price}</span>\r\n                <span className=\"medicine-discount\">{item.quantity}</span>\r\n                <span className=\"medicine-discount\">{item.total}</span>\r\n            </div>\r\n            })\r\n        }\r\n       </div>\r\n\r\n    </div>\r\n}\r\nexport default viewOrders","import React from 'react';\r\nimport { BrowserRouter,Switch,Route, Link} from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport Home from '../Home';\r\nimport AddOrders from \"../Manager/createOrder\";\r\nimport ViewOrderr from \"./viewOrders\"\r\nimport {salesLogout} from \"../../actions\"\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst SalesExecutive=( {loginStatus, salesLogin,logOutSales,adminLogin })=>{\r\n    const history=useHistory()\r\n\r\n    const handleClick = () => {\r\n                    localStorage.setItem('loginStatus', false)\r\n                    localStorage.setItem('adminLogin', false)\r\n                    localStorage.setItem('salesLogin', false)                   \r\n                    logOutSales()\r\n                    history.push(\"/\")\r\n           \r\n      };\r\n    return <div id=\"sales-home\" style={{marginTop:\"80px\"}}>\r\n      <BrowserRouter>\r\n    <h2>SalesExecutive</h2>\r\n    <div>\r\n         <span><Link to=\"/createOrder\">Create Order</Link></span>\r\n         <span><Link to=\"/sales/viewOrders\">View Orders</Link></span>\r\n         <span onClick={handleClick}><Link to=\"/\">LogOut</Link></span>\r\n    </div>\r\n    <div>\r\n     \r\n      <Switch>\r\n    {salesLogin&&loginStatus && <Route path=\"/createOrder\"><AddOrders/></Route>}\r\n    {salesLogin&&loginStatus && <Route path=\"/sales/viewOrders\"><ViewOrderr/></Route>}\r\n    {!salesLogin && !loginStatus&&<Route path=\"/\"><Home/></Route>}\r\n    </Switch>\r\n    \r\n    </div>\r\n    </BrowserRouter>\r\n</div>\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  adminLogin: state.adminLogin,\r\n  loginStatus: state.loginStatus,\r\n  salesLogin: state.salesLogin\r\n})\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    logOutSales: () => dispatch(salesLogout(''))\r\n  \r\n  })\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SalesExecutive)","import React,{useEffect, useState} from 'react';\r\nimport \"./index.css\";\r\nimport { Link } from 'react-router-dom';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { adminLogin, salesLogin} from \"../../actions\"\r\nconst Login=(props)=>{\r\n const user= props.userData.value\r\n  console.log(props.userData.value)\r\n  const [loginEmail, setLoginEmail] = useState('');\r\n  const [loginPassword, setLoginPassword] = useState('')\r\n  const [loginStatus, setLoginStatus] = useState(localStorage.getItem('loginStatus') || false);\r\n  const [isAdmin, setIsAdmin] = useState(true);\r\n  const [isEmployee, setIsEmployee] = useState(false);\r\n  const history = useHistory()\r\n  if (loginStatus !== 'false') {\r\n    localStorage.setItem('loginStatus', loginStatus)\r\n  }\r\n  \r\n  \r\n  // if(props.userData==\"Admin\"){\r\n  //   setIsAdmin(true);\r\n  // }\r\n  // else if(props.userData==\"SalesExecutive\"){\r\n  //   setIsEmployee(true)\r\n  // }\r\n  const handleLogin=(e)=>{\r\n    e.preventDefault()\r\n    // console.log(loginEmail, loginPassword)\r\n    if (props.userData.value==1) {\r\n        if (loginEmail === \"test-admin\" && loginPassword === \"test-admin\") {\r\n            setLoginStatus(true)\r\n            localStorage.setItem('loginStatus', true)\r\n            localStorage.setItem('adminLogin', true)\r\n            history.push('/admin/adminHome')\r\n            props.adminSignedIn()\r\n            alert(\"success\")\r\n            \r\n        } else {\r\n            alert(\"Invalid ggcredentials!\")\r\n        }\r\n    } else {\r\n        if (loginEmail === \"test-sales\" && loginPassword === \"test-sales\") {\r\n            setLoginStatus(true)\r\n            localStorage.setItem('loginStatus', true)\r\n            localStorage.setItem('salesLogin', true)\r\n            history.push('/sales/salesHome')\r\n            props.salesSignedIn()\r\n            alert(\"success2\")\r\n\r\n        } else {\r\n            alert(\"Invalid credentials!\")\r\n        }\r\n    }\r\n    \r\n\r\n  }\r\n    return   (\r\n      \r\n    <div id=\"loginform\">\r\n      <form onSubmit={handleLogin}>\r\n     <h2 id=\"headerTitle\">{props.userData.label} Login</h2>\r\n     \r\n     <div className=\"row\">\r\n    <label>Username</label>\r\n    <input type=\"text\" placeholder=\"Enter your username\" required\r\n                    onChange={(eVal) => setLoginEmail(eVal.target.value)} />\r\n  </div> \r\n  <div className=\"row\">\r\n    <label>Password</label>\r\n    <input type=\"password\" placeholder=\"Enter your password\" required onChange={(pVal) => {\r\n                    setLoginPassword(pVal.target.value)\r\n                }}/>\r\n  </div> \r\n  <div id=\"button\" className=\"row\">\r\n    <button type='submit'>Login</button>\r\n  </div>\r\n  </form>\r\n  </div>)\r\n}\r\nconst mapDispatchToProps = (dispatch) => ({\r\n\r\n  adminSignedIn: () => dispatch(adminLogin('')),\r\n  salesSignedIn: () => dispatch(salesLogin(''))\r\n\r\n})\r\n\r\nexport default connect(null, mapDispatchToProps)(Login)","import React,{useState} from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Select from 'react-select';\r\nimport { selectedOptions } from '../../actions';\r\nimport Login from '../Login';\r\nimport { connect } from 'react-redux';\r\nimport { adminLogin, salesLogin,loginStatus} from \"../../actions\"\r\n\r\nconst Landing=({adminLogin, salesLogin,loginStatus})=>{\r\n    if (loginStatus !== 'false'|| adminLogin !== 'false' || salesLogin !== 'false') {\r\n        localStorage.setItem('loginStatus', \"false\");\r\n        localStorage.setItem('adminLogin', \"false\");\r\n        localStorage.setItem('salesLogin', \"false\")\r\n    }\r\n    const [selectedOption, setSelectedOption] = useState(null);\r\n    const handleChange = e => {\r\n        setSelectedOption(e);        \r\n        \r\n      }\r\n     \r\n    return <div style={{marginTop:\"85px\",padding:\"0 10px\",maxWidth:\"350px\",marginLeft:\"auto\",marginRight:\"auto\"}}>\r\n         <Select\r\n        placeholder=\"Select User\"\r\n        value={selectedOption} \r\n        options={[{value:1,label:\"Admin\"},{value:2,label:\"SalesExecutive\"}]}\r\n        onChange={handleChange} \r\n      />\r\n     \r\n      {\r\n          selectedOption && <div><Login userData={selectedOption}/></div>\r\n      }\r\n    </div>\r\n}\r\nexport default Landing","import React from 'react';\r\nimport Man from \"../Manager/index\";\r\nimport Sales from \"../SalesExecutive/index\";\r\nimport Login from '../Login';\r\n\r\nimport { connect } from 'react-redux'\r\nimport Landing from '../Landing/index';\r\nimport { Route } from 'react-router-dom';\r\n\r\nconst Home = ({ loginStatus, adminLogin, salesLogin }) => {\r\n    console.log(loginStatus);\r\n    console.log(loginStatus === false);\r\n    return (<div>\r\n        {adminLogin === true && loginStatus === true && <Man />}\r\n        {salesLogin === true && loginStatus === true && <Sales />}\r\n        {loginStatus === false && <Landing/>}\r\n    </div>);\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n    loginStatus: state.loginStatus,\r\n    adminLogin: state.adminLogin,\r\n    salesLogin: state.salesLogin\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Home)","import logo from './logo.svg';\nimport './App.css';\nimport { Switch, Route, BrowserRouter } from 'react-router-dom';\nimport Navbar from './components/Navbar';\n// import Login from './components/Login';\n// import Admin from './components/Manager';\n// import AddStock from './components/Manager/addStock';\n// import Landing from './components/Landing';\n// import StockView from \"./components/Manager/viewStock\";\n// import AddSalesExec from \"./components/Manager/addEmployee\";\n// import  ViewEmploee from \"./components/Manager/viewEmployees\";\n// import ShowOrder from \"./components/Manager/viewOrders\";\n// import CreateOrder from \"./components/Manager/createOrder\";\n// import adminHome from './components/Manager/index';\nimport Home from './components/Home';\nimport { connect } from 'react-redux';\n// import AddOrders from \"./components/SalesExecutive/createOrder\";\n// import ViewOrderr from \"./components/SalesExecutive/viewOrders\"\n\nimport Man from \"./components/Manager/index\"\nimport AdminHome from './components/Manager';\nimport SalesHome from \"./components/SalesExecutive\"\n\nfunction App({ adminLogin, loginStatus, salesLogin }) {\n  console.log(adminLogin)\n  return (\n    <div className=\"App\">\n    <BrowserRouter>\n    <Navbar/>\n   \n    {console.log(adminLogin, loginStatus,salesLogin)}\n    <Switch>\n          <Route path=\"/\" exact><Home/></Route>\n          {/* {!adminLogin && !loginStatus &&<Route path=\"/\" exact><Home /></Route>} */}\n          {/* <Route path=\"/login\" exact><Home /></Route> */}\n          {/* <Route path=\"/\" exact><Login /></Route> */}\n           { adminLogin && loginStatus && <Route path=\"/admin/adminHome\"><AdminHome/> </Route>}\n           {salesLogin && loginStatus && <Route path=\"/sales/salesHome\"><SalesHome /></Route>}\n         {/*adminLogin && loginStatus && <Route path=\"/admin/add_medicine\"><StockView/> </Route>}\n          {adminLogin && loginStatus && <Route path=\"/admin/view_inventory\"><AddStock /> </Route>}\n          {adminLogin && loginStatus && <Route path=\"/admin/add_sales_executive\"><AddSalesExec /> </Route>}\n          {adminLogin && loginStatus && <Route path=\"/admin/view_team\"><ViewEmploee /> </Route>}\n          {adminLogin && loginStatus && <Route path=\"/admin/show_all_orders\"><ShowOrder /> </Route>}\n          {adminLogin && loginStatus && <Route path=\"/admin/create_orders\"><CreateOrder /> </Route>}\n          {/* {salesLogin && loginStatus && <Route path=\"/sales_executive/create_order\"><CreateExecutiveOrder /></Route>} */}\n          {/* {salesLogin && loginStatus && <Route path=\"/sales_executive/view_orders\"><ViewOrders /> </Route>} */} \n          {/* {salesLogin&&loginStatus && <Route path=\"/sales/createOrder\"><AddOrders/></Route>}\n    {salesLogin&&loginStatus && <Route path=\"/sales/viewOrders\"><ViewOrderr/></Route>}\n    {!salesLogin && !loginStatus&&<Route path=\"/\"><Home/></Route>} */}\n        </Switch>\n    </BrowserRouter>\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => ({\n  adminLogin: state.adminLogin,\n  loginStatus: state.loginStatus,\n  salesLogin: state.salesLogin\n})\n\n\nexport default connect(mapStateToProps, null)(App)\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { ADD_MEDICINE, ADD_SALES_EXECUTIVE, ADD_TO_CART, ADMIN_LOGIN, ADMIN_LOGOUT, CREATE_ORDER, EMPTY_CART, MEDICINE_ID_FOR_UPDATE, SALESEXECUTIVE_LOGIN, SALESEXECUTIVE_LOGOUT, UPDATE_ALL_ORDERS, UPDATE_EXECUTIVE_DETAILS, UPDATE_INVENTORY_DETAILS, UPDATE_INVENTORY_LIST, UPDATE_MEDICINE_DETAILS, UPDATE_EMPLOYEE_LIST, USER_ID_FOR_UPDATE } from \"../actionTypes\"\r\n\r\nconst initialState = {\r\n    \r\n    loginStatus: localStorage.getItem('loginStatus') === 'true' ? true : false,\r\n    adminLogin: localStorage.getItem('adminLogin') === 'true' ? true : false,\r\n    salesLogin: localStorage.getItem('salesLogin') === 'true' ? true : false,\r\n    inventoryList: JSON.parse(localStorage.getItem('inventoryList')) || [],\r\n    teamList: JSON.parse(localStorage.getItem('teamList')) || [],\r\n    allOrders: JSON.parse(localStorage.getItem('allOrders')) || [],\r\n    cartItem: JSON.parse(localStorage.getItem('cartItem')) || [],\r\n    userIdForUpdate: localStorage.getItem('userIdForUpdate'),\r\n    medicineIdForUpdate: localStorage.getItem('medicineIdForUpdate'),\r\n}\r\n\r\nconst loginReducer = (state = initialState, { type, payload }) => {\r\n    switch (type) {\r\n       \r\n        case ADMIN_LOGIN:\r\n            return { ...state, loginStatus: true, adminLogin: true, }\r\n        case ADMIN_LOGOUT:\r\n            return { ...state, loginStatus: false, adminLogin: false }\r\n        case SALESEXECUTIVE_LOGIN:\r\n            return { ...state, loginStatus: true, salesLogin: true }\r\n        case SALESEXECUTIVE_LOGOUT:\r\n            return { ...state, loginStatus: false, salesLogin: false }\r\n        case ADD_MEDICINE:\r\n            return { ...state, inventoryList: [...state.inventoryList, payload] }\r\n        case ADD_SALES_EXECUTIVE:\r\n            return { ...state, teamList: [...state.teamList, payload] }\r\n        case CREATE_ORDER:\r\n            return { ...state, allOrders: [...state.allOrders, payload] }\r\n        case ADD_TO_CART:\r\n            return { ...state, cartItem: [...state.cartItem, payload] }\r\n        case EMPTY_CART:\r\n            return { ...state, cartItem: [] }\r\n        case UPDATE_INVENTORY_LIST:\r\n            return { ...state, inventoryList: state.inventoryList.filter(item => item.medicineName !== payload) }\r\n        case UPDATE_EMPLOYEE_LIST:\r\n            return { ...state, teamList: state.teamList.filter(item => item.salesExecutiveId !== payload) }\r\n        case UPDATE_ALL_ORDERS:\r\n            return { ...state, allOrders: state.allOrders.filter(item => item.orderId !== payload) }\r\n        case UPDATE_EXECUTIVE_DETAILS:\r\n            return { ...state, teamList: payload }\r\n        case UPDATE_INVENTORY_DETAILS:\r\n            return { ...state, inventoryList: payload }\r\n        case MEDICINE_ID_FOR_UPDATE:\r\n            return { ...state, medicineIdForUpdate: payload }\r\n        case USER_ID_FOR_UPDATE:\r\n            return { ...state, userIdForUpdate: payload }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport default loginReducer","import { createStore } from 'redux';\r\nimport reducer from '../reducer'\r\n\r\nconst store = createStore(reducer);\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport store from \"./store\";\nimport { Provider } from \"react-redux\";\n\nReactDOM.render(\n  <Provider store={store}>\n  <App />\n</Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}